// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: geometry.capnp

#include "geometry.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<29> b_f2c4d2555710ac22 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     34, 172,  16,  87,  85, 210, 196, 242,
     15,   0,   0,   0,   3,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  71,   0,   0,   0,
     69,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  71,
    101, 111, 109, 101, 116, 114, 121,  82,
    101, 115, 111, 108, 118, 101, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    155,  31, 160,  65,  63, 176, 237, 182,
    100, 220,  82,   5, 211,  29, 124, 181,
     17,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   7,   0,   0,   0,
    114, 101, 115, 111, 108, 118, 101,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f2c4d2555710ac22 = b_f2c4d2555710ac22.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f2c4d2555710ac22[] = {
  &s_b57c1dd30552dc64,
  &s_b6edb03f41a01f9b,
};
static const uint16_t m_f2c4d2555710ac22[] = {0};
const ::capnp::_::RawSchema s_f2c4d2555710ac22 = {
  0xf2c4d2555710ac22, b_f2c4d2555710ac22.words, 29, d_f2c4d2555710ac22, m_f2c4d2555710ac22,
  2, 1, nullptr, nullptr, nullptr, { &s_f2c4d2555710ac22, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_b6edb03f41a01f9b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155,  31, 160,  65,  63, 176, 237, 182,
     32,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  71,
    101, 111, 109, 101, 116, 114, 121,  82,
    101, 115, 111, 108, 118, 101, 114,  46,
    114, 101, 115, 111, 108, 118, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 108, 108, 111, 119,  82, 101,
    102, 115,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b6edb03f41a01f9b = b_b6edb03f41a01f9b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b6edb03f41a01f9b[] = {
  &s_b57c1dd30552dc64,
};
static const uint16_t m_b6edb03f41a01f9b[] = {1, 0};
static const uint16_t i_b6edb03f41a01f9b[] = {0, 1};
const ::capnp::_::RawSchema s_b6edb03f41a01f9b = {
  0xb6edb03f41a01f9b, b_b6edb03f41a01f9b.words, 51, d_b6edb03f41a01f9b, m_b6edb03f41a01f9b,
  1, 2, i_b6edb03f41a01f9b, nullptr, nullptr, { &s_b6edb03f41a01f9b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_8639820f9894a409 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9, 164, 148, 152,  15, 130,  57, 134,
     15,   0,   0,   0,   3,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 135,   0,   0,   0,
    109,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  71,
    101, 111, 109, 101, 116, 114, 121,  76,
    105,  98,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
     75, 118, 114,  88,  38, 203, 196, 213,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     28,  20, 204, 212,   8,  29,   7, 134,
    235,  87, 158,  20,   4, 175,  90, 234,
     25,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   7,   0,   0,   0,
    109, 101, 114, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_8639820f9894a409 = b_8639820f9894a409.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8639820f9894a409[] = {
  &s_86071d08d4cc141c,
  &s_b57c1dd30552dc64,
  &s_d5c4cb265872764b,
  &s_ea5aaf04149e57eb,
};
static const uint16_t m_8639820f9894a409[] = {1, 0};
const ::capnp::_::RawSchema s_8639820f9894a409 = {
  0x8639820f9894a409, b_8639820f9894a409.words, 39, d_8639820f9894a409, m_8639820f9894a409,
  4, 2, nullptr, nullptr, nullptr, { &s_8639820f9894a409, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<46> b_d5c4cb265872764b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75, 118, 114,  88,  38, 203, 196, 213,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  71,
    101, 111, 109, 101, 116, 114, 121,  76,
    105,  98,  46, 109, 101, 114, 103, 101,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     44, 208,  68,  23, 161, 245, 102, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5c4cb265872764b = b_d5c4cb265872764b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d5c4cb265872764b[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_d5c4cb265872764b[] = {0};
static const uint16_t i_d5c4cb265872764b[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_d5c4cb265872764b[] = {
  { 16777216,  ::fsc::DataRef< ::fsc::MergedGeometry>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_d5c4cb265872764b = {
  0xd5c4cb265872764b, b_d5c4cb265872764b.words, 46, d_d5c4cb265872764b, m_d5c4cb265872764b,
  1, 1, i_d5c4cb265872764b, nullptr, nullptr, { &s_d5c4cb265872764b, nullptr, bd_d5c4cb265872764b, 0, sizeof(bd_d5c4cb265872764b) / sizeof(bd_d5c4cb265872764b[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_86071d08d4cc141c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     28,  20, 204, 212,   8,  29,   7, 134,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  71,
    101, 111, 109, 101, 116, 114, 121,  76,
    105,  98,  46, 105, 110, 100, 101, 120,
     36,  80,  97, 114,  97, 109, 115,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    103, 101, 111,  82, 101, 102,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     44, 208,  68,  23, 161, 245, 102, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114, 105, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    145,  87,  48,  50,  86, 148,  52, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_86071d08d4cc141c = b_86071d08d4cc141c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_86071d08d4cc141c[] = {
  &s_b234945632305791,
  &s_c85b8a7758032008,
};
static const uint16_t m_86071d08d4cc141c[] = {0, 1};
static const uint16_t i_86071d08d4cc141c[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_86071d08d4cc141c[] = {
  { 16777216,  ::fsc::DataRef< ::fsc::MergedGeometry>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_86071d08d4cc141c = {
  0x86071d08d4cc141c, b_86071d08d4cc141c.words, 60, d_86071d08d4cc141c, m_86071d08d4cc141c,
  2, 2, i_86071d08d4cc141c, nullptr, nullptr, { &s_86071d08d4cc141c, nullptr, bd_86071d08d4cc141c, 0, sizeof(bd_86071d08d4cc141c) / sizeof(bd_86071d08d4cc141c[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<46> b_ea5aaf04149e57eb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    235,  87, 158,  20,   4, 175,  90, 234,
     27,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  71,
    101, 111, 109, 101, 116, 114, 121,  76,
    105,  98,  46, 105, 110, 100, 101, 120,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     24, 124, 242, 160,  85,  37,  75, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea5aaf04149e57eb = b_ea5aaf04149e57eb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ea5aaf04149e57eb[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_ea5aaf04149e57eb[] = {0};
static const uint16_t i_ea5aaf04149e57eb[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ea5aaf04149e57eb[] = {
  { 16777216,  ::fsc::DataRef< ::fsc::IndexedGeometry>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ea5aaf04149e57eb = {
  0xea5aaf04149e57eb, b_ea5aaf04149e57eb.words, 46, d_ea5aaf04149e57eb, m_ea5aaf04149e57eb,
  1, 1, i_ea5aaf04149e57eb, nullptr, nullptr, { &s_ea5aaf04149e57eb, nullptr, bd_ea5aaf04149e57eb, 0, sizeof(bd_ea5aaf04149e57eb) / sizeof(bd_ea5aaf04149e57eb[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_a3764d675f60b016 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     22, 176,  96,  95, 103,  77, 118, 163,
     15,   0,   0,   0,   1,   0,   2,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  84,
     97, 103,  86,  97, 108, 117, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 116,  83, 101, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,  73, 110, 116,  54,  52,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a3764d675f60b016 = b_a3764d675f60b016.words;
#if !CAPNP_LITE
static const uint16_t m_a3764d675f60b016[] = {0, 1};
static const uint16_t i_a3764d675f60b016[] = {0, 1};
const ::capnp::_::RawSchema s_a3764d675f60b016 = {
  0xa3764d675f60b016, b_a3764d675f60b016.words, 47, nullptr, m_a3764d675f60b016,
  0, 2, i_a3764d675f60b016, nullptr, nullptr, { &s_a3764d675f60b016, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_8f0bb242fc5b513b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59,  81,  91, 252,  66, 178,  11, 143,
     15,   0,   0,   0,   1,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  84,
     97, 103,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     22, 176,  96,  95, 103,  77, 118, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8f0bb242fc5b513b = b_8f0bb242fc5b513b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8f0bb242fc5b513b[] = {
  &s_a3764d675f60b016,
};
static const uint16_t m_8f0bb242fc5b513b[] = {0, 1};
static const uint16_t i_8f0bb242fc5b513b[] = {0, 1};
const ::capnp::_::RawSchema s_8f0bb242fc5b513b = {
  0x8f0bb242fc5b513b, b_8f0bb242fc5b513b.words, 47, d_8f0bb242fc5b513b, m_8f0bb242fc5b513b,
  1, 2, i_8f0bb242fc5b513b, nullptr, nullptr, { &s_8f0bb242fc5b513b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<153> b_b234945632305791 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145,  87,  48,  50,  86, 148,  52, 178,
     15,   0,   0,   0,   1,   0,   8,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 114, 116, 101, 115, 105,  97, 110,
     71, 114, 105, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  13,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  14,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
    120,  77, 105, 110,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  77,  97, 120,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,  77, 105, 110,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,  77,  97, 120,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122,  77, 105, 110,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122,  77,  97, 120,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  88,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  89,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  90,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b234945632305791 = b_b234945632305791.words;
#if !CAPNP_LITE
static const uint16_t m_b234945632305791[] = {6, 7, 8, 1, 0, 3, 2, 5, 4};
static const uint16_t i_b234945632305791[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
const ::capnp::_::RawSchema s_b234945632305791 = {
  0xb234945632305791, b_b234945632305791.words, 153, nullptr, m_b234945632305791,
  0, 9, i_b234945632305791, nullptr, nullptr, { &s_b234945632305791, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_e74c6788fa76d19c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
     15,   0,   0,   0,   1,   0,   2,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      3,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  15,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  84,
    114,  97, 110, 115, 102, 111, 114, 109,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    202,  13,  84, 243, 234,  96, 208, 179,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     24, 218, 208, 158, 228, 191,  27, 190,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 102,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 105, 102, 116, 101, 100,   0,
    116, 117, 114, 110, 101, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e74c6788fa76d19c = b_e74c6788fa76d19c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e74c6788fa76d19c[] = {
  &s_b3d060eaf3540dca,
  &s_be1bbfe49ed0da18,
};
static const uint16_t m_e74c6788fa76d19c[] = {0, 1, 2};
static const uint16_t i_e74c6788fa76d19c[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e74c6788fa76d19c = {
  0xe74c6788fa76d19c, b_e74c6788fa76d19c.words, 52, d_e74c6788fa76d19c, m_e74c6788fa76d19c,
  2, 3, i_e74c6788fa76d19c, nullptr, nullptr, { &s_e74c6788fa76d19c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_b3d060eaf3540dca = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    202,  13,  84, 243, 234,  96, 208, 179,
     27,   0,   0,   0,   1,   0,   2,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      3,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  84,
    114,  97, 110, 115, 102, 111, 114, 109,
    101, 100,  46, 115, 104, 105, 102, 116,
    101, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    115, 104, 105, 102, 116,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 100, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b3d060eaf3540dca = b_b3d060eaf3540dca.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b3d060eaf3540dca[] = {
  &s_e74c6788fa76d19c,
};
static const uint16_t m_b3d060eaf3540dca[] = {1, 0};
static const uint16_t i_b3d060eaf3540dca[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b3d060eaf3540dca[] = {
  { 16777217,  ::fsc::Transformed< ::capnp::AnyPointer>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b3d060eaf3540dca = {
  0xb3d060eaf3540dca, b_b3d060eaf3540dca.words, 64, d_b3d060eaf3540dca, m_b3d060eaf3540dca,
  1, 2, i_b3d060eaf3540dca, nullptr, nullptr, { &s_b3d060eaf3540dca, nullptr, bd_b3d060eaf3540dca, 0, sizeof(bd_b3d060eaf3540dca) / sizeof(bd_b3d060eaf3540dca[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<101> b_be1bbfe49ed0da18 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24, 218, 208, 158, 228, 191,  27, 190,
     27,   0,   0,   0,   1,   0,   2,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      3,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  84,
    114,  97, 110, 115, 102, 111, 114, 109,
    101, 100,  46, 116, 117, 114, 110, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
     97, 110, 103, 108, 101,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 110, 116, 101, 114,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  29,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 120, 105, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 100, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_be1bbfe49ed0da18 = b_be1bbfe49ed0da18.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_be1bbfe49ed0da18[] = {
  &s_e74c6788fa76d19c,
};
static const uint16_t m_be1bbfe49ed0da18[] = {0, 2, 1, 3};
static const uint16_t i_be1bbfe49ed0da18[] = {0, 1, 2, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_be1bbfe49ed0da18[] = {
  { 16777219,  ::fsc::Transformed< ::capnp::AnyPointer>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_be1bbfe49ed0da18 = {
  0xbe1bbfe49ed0da18, b_be1bbfe49ed0da18.words, 101, d_be1bbfe49ed0da18, m_be1bbfe49ed0da18,
  1, 4, i_be1bbfe49ed0da18, nullptr, nullptr, { &s_be1bbfe49ed0da18, nullptr, bd_be1bbfe49ed0da18, 0, sizeof(bd_be1bbfe49ed0da18) / sizeof(bd_be1bbfe49ed0da18[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<87> b_ba34a2dae3ba108c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    140,  16, 186, 227, 218, 162,  52, 186,
     15,   0,   0,   0,   1,   0,   1,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      3,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  77,
    101, 115, 104,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 255, 255,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 116, 105,  99, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     33, 119, 255, 124, 208, 144,  98, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 105,  99, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 108, 121,  77, 101, 115, 104,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114, 105,  77, 101, 115, 104,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba34a2dae3ba108c = b_ba34a2dae3ba108c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba34a2dae3ba108c[] = {
  &s_eb6290d07cff7721,
};
static const uint16_t m_ba34a2dae3ba108c[] = {1, 2, 3, 0};
static const uint16_t i_ba34a2dae3ba108c[] = {2, 3, 0, 1};
const ::capnp::_::RawSchema s_ba34a2dae3ba108c = {
  0xba34a2dae3ba108c, b_ba34a2dae3ba108c.words, 87, d_ba34a2dae3ba108c, m_ba34a2dae3ba108c,
  1, 4, i_ba34a2dae3ba108c, nullptr, nullptr, { &s_ba34a2dae3ba108c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<180> b_b57c1dd30552dc64 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
     15,   0,   0,   0,   1,   0,   1,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      2,   0,   7,   0,   0,   0,   6,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  71,
    101, 111, 109, 101, 116, 114, 121,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
     28,   1,   0,   0,   2,   0,   1,   0,
      3,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
      4,   0, 252, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   3,   0,   1,   0,
    132,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 251, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   1,   0,   0,   3,   0,   1,   0,
    160,   1,   0,   0,   2,   0,   1,   0,
      6,   0, 250, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   1,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   1,   0,   0,   3,   0,   1,   0,
    188,   1,   0,   0,   2,   0,   1,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59,  81,  91, 252,  66, 178,  11, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109,  98, 105, 110, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 110, 115, 102, 111, 114,
    109, 101, 100,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    156, 209, 118, 250, 136, 103,  76, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 104,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    140,  16, 186, 227, 218, 162,  52, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116, 115,  68,  66,  77, 101, 115, 104,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116, 115,  68,  66,  65, 115, 115, 101,
    109,  98, 108, 105, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b57c1dd30552dc64 = b_b57c1dd30552dc64.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b57c1dd30552dc64[] = {
  &s_8f0bb242fc5b513b,
  &s_b57c1dd30552dc64,
  &s_c85b8a7758032008,
  &s_e74c6788fa76d19c,
};
static const uint16_t m_b57c1dd30552dc64[] = {1, 6, 5, 4, 3, 0, 2};
static const uint16_t i_b57c1dd30552dc64[] = {1, 2, 3, 4, 5, 6, 0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b57c1dd30552dc64[] = {
  { 16777218,  ::fsc::Transformed< ::fsc::Geometry>::_capnpPrivate::brand() },
  { 16777219,  ::fsc::DataRef< ::fsc::Geometry>::_capnpPrivate::brand() },
  { 16777220,  ::fsc::DataRef< ::fsc::Mesh>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b57c1dd30552dc64 = {
  0xb57c1dd30552dc64, b_b57c1dd30552dc64.words, 180, d_b57c1dd30552dc64, m_b57c1dd30552dc64,
  4, 7, i_b57c1dd30552dc64, nullptr, nullptr, { &s_b57c1dd30552dc64, nullptr, bd_b57c1dd30552dc64, 0, sizeof(bd_b57c1dd30552dc64) / sizeof(bd_b57c1dd30552dc64[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_f2351429f15cb5a6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    166, 181,  92, 241,  41,  20,  53, 242,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  79, 112,  49,  50,  68, 105,
    118, 101, 114, 116, 111, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  45,   0,   0,   0,
    165,   0,   0,   0,   0,   0,   0,   0,
    166,   0,   0,   0,   0,   0,   0,   0,
    167,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f2351429f15cb5a6 = b_f2351429f15cb5a6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f2351429f15cb5a6 = {
  0xf2351429f15cb5a6, b_f2351429f15cb5a6.words, 32, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f2351429f15cb5a6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_fe4eefc7f0505b5c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     92,  91,  80, 240, 199, 239,  78, 254,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  79, 112,  49,  50,  66,  97,
    102, 102, 108, 101, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  45,   0,   0,   0,
     64,   1,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,   0,   0,   0,   0,
     66,   1,   0,   0,   0,   0,   0,   0,
     67,   1,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe4eefc7f0505b5c = b_fe4eefc7f0505b5c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fe4eefc7f0505b5c = {
  0xfe4eefc7f0505b5c, b_fe4eefc7f0505b5c.words, 32, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fe4eefc7f0505b5c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_cfe0321bdfa7c494 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148, 196, 167, 223,  27,  50, 224, 207,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  79, 112,  49,  50,  67, 111,
    118, 101, 114, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  45,   0,   0,   0,
     69,   1,   0,   0,   0,   0,   0,   0,
     70,   1,   0,   0,   0,   0,   0,   0,
     71,   1,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cfe0321bdfa7c494 = b_cfe0321bdfa7c494.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cfe0321bdfa7c494 = {
  0xcfe0321bdfa7c494, b_cfe0321bdfa7c494.words, 32, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cfe0321bdfa7c494, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_dcda7e9f816d2ec3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195,  46, 109, 129, 159, 126, 218, 220,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  79, 112,  49,  50,  72, 101,
     97, 116,  83, 104, 105, 101, 108, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  45,   0,   0,   0,
     74,   1,   0,   0,   0,   0,   0,   0,
     75,   1,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,   0,   0,   0,   0,
     78,   1,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dcda7e9f816d2ec3 = b_dcda7e9f816d2ec3.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_dcda7e9f816d2ec3 = {
  0xdcda7e9f816d2ec3, b_dcda7e9f816d2ec3.words, 33, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_dcda7e9f816d2ec3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_f816983b8189e163 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 225, 137, 129,  59, 152,  22, 248,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  79, 112,  49,  50,  80, 117,
    109, 112,  83, 108, 105, 116, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  45,   0,   0,   0,
    194,   1,   0,   0,   0,   0,   0,   0,
    195,   1,   0,   0,   0,   0,   0,   0,
    196,   1,   0,   0,   0,   0,   0,   0,
    197,   1,   0,   0,   0,   0,   0,   0,
    198,   1,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f816983b8189e163 = b_f816983b8189e163.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f816983b8189e163 = {
  0xf816983b8189e163, b_f816983b8189e163.words, 32, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f816983b8189e163, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_fedd367d3b4ad897 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    151, 216,  74,  59, 125,  54, 221, 254,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  83, 116, 101, 101, 108,  80,
     97, 110, 101, 108, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  13,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fedd367d3b4ad897 = b_fedd367d3b4ad897.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fedd367d3b4ad897 = {
  0xfedd367d3b4ad897, b_fedd367d3b4ad897.words, 28, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fedd367d3b4ad897, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_ef17a7c1a8826c90 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144, 108, 130, 168, 193, 167,  23, 239,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  80, 108,  97, 115, 109,  97,
     86, 101, 115, 115, 101, 108,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  13,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ef17a7c1a8826c90 = b_ef17a7c1a8826c90.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ef17a7c1a8826c90 = {
  0xef17a7c1a8826c90, b_ef17a7c1a8826c90.words, 28, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ef17a7c1a8826c90, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<76> b_aab63a308ecce1b4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180, 225, 204, 142,  48,  58, 182, 170,
     15,   0,   0,   0,   4,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58, 119,
     55, 120,  79, 112,  49,  50,  80, 102,
     99, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 220,  82,   5, 211,  29, 124, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 175,   0,   0,   0,
     28,   0,   0,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  45,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  45,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  45,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  45,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  45,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  13,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  13,   0,   0,   0,
    165,   0,   0,   0,   0,   0,   0,   0,
    166,   0,   0,   0,   0,   0,   0,   0,
    167,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,   0,   0,   0,   0,
     64,   1,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,   0,   0,   0,   0,
     66,   1,   0,   0,   0,   0,   0,   0,
     67,   1,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,   0,   0,   0,   0,
     70,   1,   0,   0,   0,   0,   0,   0,
     71,   1,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0,   0,   0,   0,   0,
     74,   1,   0,   0,   0,   0,   0,   0,
     75,   1,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,   0,   0,   0,   0,
     78,   1,   0,   0,   0,   0,   0,   0,
    194,   1,   0,   0,   0,   0,   0,   0,
    195,   1,   0,   0,   0,   0,   0,   0,
    196,   1,   0,   0,   0,   0,   0,   0,
    197,   1,   0,   0,   0,   0,   0,   0,
    198,   1,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aab63a308ecce1b4 = b_aab63a308ecce1b4.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_aab63a308ecce1b4 = {
  0xaab63a308ecce1b4, b_aab63a308ecce1b4.words, 76, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_aab63a308ecce1b4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_da66f5a11744d02c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     44, 208,  68,  23, 161, 245, 102, 218,
     15,   0,   0,   0,   1,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  77,
    101, 114, 103, 101, 100,  71, 101, 111,
    109, 101, 116, 114, 121,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     64, 204, 190, 126, 151,  28, 241, 226,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 103,  78,  97, 109, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     64, 204, 190, 126, 151,  28, 241, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da66f5a11744d02c = b_da66f5a11744d02c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_da66f5a11744d02c[] = {
  &s_e2f11c977ebecc40,
};
static const uint16_t m_da66f5a11744d02c[] = {1, 0};
static const uint16_t i_da66f5a11744d02c[] = {0, 1};
const ::capnp::_::RawSchema s_da66f5a11744d02c = {
  0xda66f5a11744d02c, b_da66f5a11744d02c.words, 60, d_da66f5a11744d02c, m_da66f5a11744d02c,
  1, 2, i_da66f5a11744d02c, nullptr, nullptr, { &s_da66f5a11744d02c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_e2f11c977ebecc40 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     64, 204, 190, 126, 151,  28, 241, 226,
     30,   0,   0,   0,   1,   0,   0,   0,
     44, 208,  68,  23, 161, 245, 102, 218,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  77,
    101, 114, 103, 101, 100,  71, 101, 111,
    109, 101, 116, 114, 121,  46,  69, 110,
    116, 114, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     22, 176,  96,  95, 103,  77, 118, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 104,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    140,  16, 186, 227, 218, 162,  52, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e2f11c977ebecc40 = b_e2f11c977ebecc40.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e2f11c977ebecc40[] = {
  &s_a3764d675f60b016,
  &s_ba34a2dae3ba108c,
};
static const uint16_t m_e2f11c977ebecc40[] = {1, 0};
static const uint16_t i_e2f11c977ebecc40[] = {0, 1};
const ::capnp::_::RawSchema s_e2f11c977ebecc40 = {
  0xe2f11c977ebecc40, b_e2f11c977ebecc40.words, 53, d_e2f11c977ebecc40, m_e2f11c977ebecc40,
  2, 2, i_e2f11c977ebecc40, nullptr, nullptr, { &s_e2f11c977ebecc40, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<103> b_a54b2555a0f27c18 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24, 124, 242, 160,  85,  37,  75, 165,
     15,   0,   0,   0,   1,   0,   0,   0,
    179, 124,  46,  97, 124, 132, 157, 248,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 100, 101, 120, 101, 100,  71, 101,
    111, 109, 101, 116, 114, 121,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
     77, 191, 182, 166, 235, 180, 142, 135,
      9,   0,   0,   0,  90,   0,   0,   0,
    254,  61, 184,  47,  26,  74, 127, 158,
      9,   0,   0,   0,  82,   0,   0,   0,
     69, 108, 101, 109, 101, 110, 116,  82,
    101, 102,   0,   0,   0,   0,   0,   0,
     71, 114, 105, 100,  69, 110, 116, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
     98,  97, 115, 101,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     44, 208,  68,  23, 161, 245, 102, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114, 105, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    145,  87,  48,  50,  86, 148,  52, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     99, 230,  23,  55, 199, 128, 143, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     99, 230,  23,  55, 199, 128, 143, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     77, 191, 182, 166, 235, 180, 142, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a54b2555a0f27c18 = b_a54b2555a0f27c18.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a54b2555a0f27c18[] = {
  &s_b234945632305791,
  &s_c85b8a7758032008,
  &s_e58f80c73717e663,
};
static const uint16_t m_a54b2555a0f27c18[] = {0, 2, 1};
static const uint16_t i_a54b2555a0f27c18[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_a54b2555a0f27c18[] = {
  { 16777216,  ::fsc::DataRef< ::fsc::MergedGeometry>::_capnpPrivate::brand() },
  { 16777218,  ::fsc::ShapedList< ::capnp::List< ::capnp::List< ::fsc::IndexedGeometry::ElementRef,  ::capnp::Kind::STRUCT>,  ::capnp::Kind::LIST>>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_a54b2555a0f27c18 = {
  0xa54b2555a0f27c18, b_a54b2555a0f27c18.words, 103, d_a54b2555a0f27c18, m_a54b2555a0f27c18,
  3, 3, i_a54b2555a0f27c18, nullptr, nullptr, { &s_a54b2555a0f27c18, nullptr, bd_a54b2555a0f27c18, 0, sizeof(bd_a54b2555a0f27c18) / sizeof(bd_a54b2555a0f27c18[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_878eb4eba6b6bf4d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     77, 191, 182, 166, 235, 180, 142, 135,
     31,   0,   0,   0,   1,   0,   2,   0,
     24, 124, 242, 160,  85,  37,  75, 165,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 100, 101, 120, 101, 100,  71, 101,
    111, 109, 101, 116, 114, 121,  46,  69,
    108, 101, 109, 101, 110, 116,  82, 101,
    102,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 115, 104,  73, 110, 100, 101,
    120,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 108, 101, 109, 101, 110, 116,  73,
    110, 100, 101, 120,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_878eb4eba6b6bf4d = b_878eb4eba6b6bf4d.words;
#if !CAPNP_LITE
static const uint16_t m_878eb4eba6b6bf4d[] = {1, 0};
static const uint16_t i_878eb4eba6b6bf4d[] = {0, 1};
const ::capnp::_::RawSchema s_878eb4eba6b6bf4d = {
  0x878eb4eba6b6bf4d, b_878eb4eba6b6bf4d.words, 52, nullptr, m_878eb4eba6b6bf4d,
  0, 2, i_878eb4eba6b6bf4d, nullptr, nullptr, { &s_878eb4eba6b6bf4d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_9e7f4a1a2fb83dfe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    254,  61, 184,  47,  26,  74, 127, 158,
     31,   0,   0,   0,   1,   0,   0,   0,
     24, 124, 242, 160,  85,  37,  75, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 100, 101, 120, 101, 100,  71, 101,
    111, 109, 101, 116, 114, 121,  46,  71,
    114, 105, 100,  69, 110, 116, 114, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    101, 108, 101, 109, 101, 110, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     77, 191, 182, 166, 235, 180, 142, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9e7f4a1a2fb83dfe = b_9e7f4a1a2fb83dfe.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9e7f4a1a2fb83dfe[] = {
  &s_878eb4eba6b6bf4d,
};
static const uint16_t m_9e7f4a1a2fb83dfe[] = {0};
static const uint16_t i_9e7f4a1a2fb83dfe[] = {0};
const ::capnp::_::RawSchema s_9e7f4a1a2fb83dfe = {
  0x9e7f4a1a2fb83dfe, b_9e7f4a1a2fb83dfe.words, 40, d_9e7f4a1a2fb83dfe, m_9e7f4a1a2fb83dfe,
  1, 1, i_9e7f4a1a2fb83dfe, nullptr, nullptr, { &s_9e7f4a1a2fb83dfe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace fsc {

#if !CAPNP_LITE
::capnp::Request< ::fsc::GeometryResolver::ResolveParams,  ::fsc::Geometry>
GeometryResolver::Client::resolveRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::GeometryResolver::ResolveParams,  ::fsc::Geometry>(
      0xf2c4d2555710ac22ull, 0, sizeHint);
}
::kj::Promise<void> GeometryResolver::Server::resolve(ResolveContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "geometry.capnp:GeometryResolver", "resolve",
      0xf2c4d2555710ac22ull, 0);
}
::capnp::Capability::Server::DispatchCallResult GeometryResolver::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xf2c4d2555710ac22ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("geometry.capnp:GeometryResolver", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult GeometryResolver::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        resolve(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::GeometryResolver::ResolveParams,  ::fsc::Geometry>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "geometry.capnp:GeometryResolver",
          0xf2c4d2555710ac22ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// GeometryResolver
#if !CAPNP_LITE
constexpr ::capnp::Kind GeometryResolver::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GeometryResolver::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GeometryResolver::ResolveParams
constexpr uint16_t GeometryResolver::ResolveParams::_capnpPrivate::dataWordSize;
constexpr uint16_t GeometryResolver::ResolveParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GeometryResolver::ResolveParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GeometryResolver::ResolveParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::fsc::Geometry,  ::fsc::GeometryLib::MergeResults>
GeometryLib::Client::mergeRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::Geometry,  ::fsc::GeometryLib::MergeResults>(
      0x8639820f9894a409ull, 0, sizeHint);
}
::kj::Promise<void> GeometryLib::Server::merge(MergeContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "geometry.capnp:GeometryLib", "merge",
      0x8639820f9894a409ull, 0);
}
::capnp::Request< ::fsc::GeometryLib::IndexParams,  ::fsc::GeometryLib::IndexResults>
GeometryLib::Client::indexRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::GeometryLib::IndexParams,  ::fsc::GeometryLib::IndexResults>(
      0x8639820f9894a409ull, 1, sizeHint);
}
::kj::Promise<void> GeometryLib::Server::index(IndexContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "geometry.capnp:GeometryLib", "index",
      0x8639820f9894a409ull, 1);
}
::capnp::Capability::Server::DispatchCallResult GeometryLib::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0x8639820f9894a409ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("geometry.capnp:GeometryLib", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult GeometryLib::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        merge(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::Geometry,  ::fsc::GeometryLib::MergeResults>(context)),
        false
      };
    case 1:
      return {
        index(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::GeometryLib::IndexParams,  ::fsc::GeometryLib::IndexResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "geometry.capnp:GeometryLib",
          0x8639820f9894a409ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// GeometryLib
#if !CAPNP_LITE
constexpr ::capnp::Kind GeometryLib::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GeometryLib::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GeometryLib::MergeResults
constexpr uint16_t GeometryLib::MergeResults::_capnpPrivate::dataWordSize;
constexpr uint16_t GeometryLib::MergeResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GeometryLib::MergeResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GeometryLib::MergeResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GeometryLib::IndexParams
constexpr uint16_t GeometryLib::IndexParams::_capnpPrivate::dataWordSize;
constexpr uint16_t GeometryLib::IndexParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GeometryLib::IndexParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GeometryLib::IndexParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GeometryLib::IndexResults
constexpr uint16_t GeometryLib::IndexResults::_capnpPrivate::dataWordSize;
constexpr uint16_t GeometryLib::IndexResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GeometryLib::IndexResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GeometryLib::IndexResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TagValue
constexpr uint16_t TagValue::_capnpPrivate::dataWordSize;
constexpr uint16_t TagValue::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TagValue::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TagValue::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Tag
constexpr uint16_t Tag::_capnpPrivate::dataWordSize;
constexpr uint16_t Tag::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Tag::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Tag::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CartesianGrid
constexpr uint16_t CartesianGrid::_capnpPrivate::dataWordSize;
constexpr uint16_t CartesianGrid::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CartesianGrid::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CartesianGrid::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Mesh
constexpr uint16_t Mesh::_capnpPrivate::dataWordSize;
constexpr uint16_t Mesh::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Mesh::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Mesh::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Geometry
constexpr uint16_t Geometry::_capnpPrivate::dataWordSize;
constexpr uint16_t Geometry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Geometry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Geometry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_OP12_DIVERTOR(::capnp::schemas::b_f2351429f15cb5a6.words + 23);
const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_OP12_BAFFLES(::capnp::schemas::b_fe4eefc7f0505b5c.words + 23);
const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_OP12_COVERS(::capnp::schemas::b_cfe0321bdfa7c494.words + 23);
const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_OP12_HEAT_SHIELD(::capnp::schemas::b_dcda7e9f816d2ec3.words + 24);
const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_OP12_PUMP_SLITS(::capnp::schemas::b_f816983b8189e163.words + 23);
const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_STEEL_PANELS(::capnp::schemas::b_fedd367d3b4ad897.words + 23);
const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_PLASMA_VESSEL(::capnp::schemas::b_ef17a7c1a8826c90.words + 23);
const ::capnp::_::ConstStruct< ::fsc::Geometry> W7X_OP12_PFCS(::capnp::schemas::b_aab63a308ecce1b4.words + 23);
// MergedGeometry
constexpr uint16_t MergedGeometry::_capnpPrivate::dataWordSize;
constexpr uint16_t MergedGeometry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MergedGeometry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MergedGeometry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MergedGeometry::Entry
constexpr uint16_t MergedGeometry::Entry::_capnpPrivate::dataWordSize;
constexpr uint16_t MergedGeometry::Entry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MergedGeometry::Entry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MergedGeometry::Entry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// IndexedGeometry
constexpr uint16_t IndexedGeometry::_capnpPrivate::dataWordSize;
constexpr uint16_t IndexedGeometry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind IndexedGeometry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IndexedGeometry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// IndexedGeometry::ElementRef
constexpr uint16_t IndexedGeometry::ElementRef::_capnpPrivate::dataWordSize;
constexpr uint16_t IndexedGeometry::ElementRef::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind IndexedGeometry::ElementRef::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IndexedGeometry::ElementRef::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// IndexedGeometry::GridEntry
constexpr uint16_t IndexedGeometry::GridEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t IndexedGeometry::GridEntry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind IndexedGeometry::GridEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IndexedGeometry::GridEntry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

