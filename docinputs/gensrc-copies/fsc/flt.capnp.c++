// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: flt.capnp

#include "flt.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<46> b_9b963df0f312c515 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     21, 197,  18, 243, 240,  61, 150, 155,
     10,   0,   0,   0,   2,   0,   0,   0,
    180,  97, 115, 183, 249, 192, 150, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 116,  46,  99,  97, 112, 110,
    112,  58,  70,  76,  84,  83, 116, 111,
    112,  82, 101,  97, 115, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
    115, 116, 101, 112,  76, 105, 109, 105,
    116,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  97, 110,  99, 101,
     76, 105, 109, 105, 116,   0,   0,   0,
    116, 117, 114, 110,  76, 105, 109, 105,
    116,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  66, 117, 102,
    102, 101, 114,  70, 117, 108, 108,   0,
    111, 117, 116,  79, 102,  71, 114, 105,
    100,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b963df0f312c515 = b_9b963df0f312c515.words;
#if !CAPNP_LITE
static const uint16_t m_9b963df0f312c515[] = {2, 4, 5, 1, 3, 0};
const ::capnp::_::RawSchema s_9b963df0f312c515 = {
  0x9b963df0f312c515, b_9b963df0f312c515.words, 46, nullptr, m_9b963df0f312c515,
  0, 6, nullptr, nullptr, nullptr, { &s_9b963df0f312c515, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(FLTStopReason_9b963df0f312c515, 9b963df0f312c515);
static const ::capnp::_::AlignedData<117> b_b9b57c9030fc534a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     74,  83, 252,  48, 144, 124, 181, 185,
     10,   0,   0,   0,   1,   0,   3,   0,
    180,  97, 115, 183, 249, 192, 150, 193,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 116,  46,  99,  97, 112, 110,
    112,  58,  70,  76,  84,  75, 101, 114,
    110, 101, 108,  83, 116,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  83, 116, 101, 112, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  97, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 117, 114, 110,  67, 111, 117, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 104, 105,  48,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  67, 111, 117,
    110, 116,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b9b57c9030fc534a = b_b9b57c9030fc534a.words;
#if !CAPNP_LITE
static const uint16_t m_b9b57c9030fc534a[] = {2, 5, 1, 4, 0, 3};
static const uint16_t i_b9b57c9030fc534a[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_b9b57c9030fc534a = {
  0xb9b57c9030fc534a, b_b9b57c9030fc534a.words, 117, nullptr, m_b9b57c9030fc534a,
  0, 6, i_b9b57c9030fc534a, nullptr, nullptr, { &s_b9b57c9030fc534a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<110> b_e55570bc21f97ea4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    164, 126, 249,  33, 188, 112,  85, 229,
     10,   0,   0,   0,   1,   0,   2,   0,
    180,  97, 115, 183, 249, 192, 150, 193,
      1,   0,   7,   0,   0,   0,   3,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 116,  46,  99,  97, 112, 110,
    112,  58,  70,  76,  84,  75, 101, 114,
    110, 101, 108,  69, 118, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     87, 160,   6, 102, 107, 240, 100, 128,
    197,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0, 253, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
    108, 111,  99,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 101, 112,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  97, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 117, 116,  79, 102,  71, 114, 105,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 104, 105,  80, 108,  97, 110, 101,
     73, 110, 116, 101, 114, 115, 101,  99,
    116, 105, 111, 110,   0,   0,   0,   0,
    110, 101, 119,  84, 117, 114, 110,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e55570bc21f97ea4 = b_e55570bc21f97ea4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e55570bc21f97ea4[] = {
  &s_8064f06b6606a057,
};
static const uint16_t m_e55570bc21f97ea4[] = {2, 0, 5, 3, 4, 1};
static const uint16_t i_e55570bc21f97ea4[] = {3, 4, 5, 0, 1, 2};
const ::capnp::_::RawSchema s_e55570bc21f97ea4 = {
  0xe55570bc21f97ea4, b_e55570bc21f97ea4.words, 110, d_e55570bc21f97ea4, m_e55570bc21f97ea4,
  1, 6, i_e55570bc21f97ea4, nullptr, nullptr, { &s_e55570bc21f97ea4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_8064f06b6606a057 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     87, 160,   6, 102, 107, 240, 100, 128,
     25,   0,   0,   0,   1,   0,   2,   0,
    164, 126, 249,  33, 188, 112,  85, 229,
      1,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 116,  46,  99,  97, 112, 110,
    112,  58,  70,  76,  84,  75, 101, 114,
    110, 101, 108,  69, 118, 101, 110, 116,
     46, 112, 104, 105,  80, 108,  97, 110,
    101,  73, 110, 116, 101, 114, 115, 101,
     99, 116, 105, 111, 110,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112, 108,  97, 110, 101,  78, 111,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8064f06b6606a057 = b_8064f06b6606a057.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8064f06b6606a057[] = {
  &s_e55570bc21f97ea4,
};
static const uint16_t m_8064f06b6606a057[] = {0};
static const uint16_t i_8064f06b6606a057[] = {0};
const ::capnp::_::RawSchema s_8064f06b6606a057 = {
  0x8064f06b6606a057, b_8064f06b6606a057.words, 34, d_8064f06b6606a057, m_8064f06b6606a057,
  1, 1, i_8064f06b6606a057, nullptr, nullptr, { &s_8064f06b6606a057, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_df6d302ca8c9b3a7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    167, 179, 201, 168,  44,  48, 109, 223,
     10,   0,   0,   0,   1,   0,   0,   0,
    180,  97, 115, 183, 249, 192, 150, 193,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 116,  46,  99,  97, 112, 110,
    112,  58,  70,  76,  84,  75, 101, 114,
    110, 101, 108,  68,  97, 116,  97,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    189, 130, 255, 130,  41, 188,  42, 179,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    189, 130, 255, 130,  41, 188,  42, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_df6d302ca8c9b3a7 = b_df6d302ca8c9b3a7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_df6d302ca8c9b3a7[] = {
  &s_b32abc2982ff82bd,
};
static const uint16_t m_df6d302ca8c9b3a7[] = {0};
static const uint16_t i_df6d302ca8c9b3a7[] = {0};
const ::capnp::_::RawSchema s_df6d302ca8c9b3a7 = {
  0xdf6d302ca8c9b3a7, b_df6d302ca8c9b3a7.words, 39, d_df6d302ca8c9b3a7, m_df6d302ca8c9b3a7,
  1, 1, i_df6d302ca8c9b3a7, nullptr, nullptr, { &s_df6d302ca8c9b3a7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_b32abc2982ff82bd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    189, 130, 255, 130,  41, 188,  42, 179,
     24,   0,   0,   0,   1,   0,   1,   0,
    167, 179, 201, 168,  44,  48, 109, 223,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 116,  46,  99,  97, 112, 110,
    112,  58,  70,  76,  84,  75, 101, 114,
    110, 101, 108,  68,  97, 116,  97,  46,
     69, 110, 116, 114, 121,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 111, 112,  82, 101,  97, 115,
    111, 110,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     21, 197,  18, 243, 240,  61, 150, 155,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74,  83, 252,  48, 144, 124, 181, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    164, 126, 249,  33, 188, 112,  85, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b32abc2982ff82bd = b_b32abc2982ff82bd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b32abc2982ff82bd[] = {
  &s_9b963df0f312c515,
  &s_b9b57c9030fc534a,
  &s_e55570bc21f97ea4,
};
static const uint16_t m_b32abc2982ff82bd[] = {2, 1, 0};
static const uint16_t i_b32abc2982ff82bd[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b32abc2982ff82bd = {
  0xb32abc2982ff82bd, b_b32abc2982ff82bd.words, 68, d_b32abc2982ff82bd, m_b32abc2982ff82bd,
  3, 3, i_b32abc2982ff82bd, nullptr, nullptr, { &s_b32abc2982ff82bd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<133> b_fa8e7c439b6a9377 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119, 147, 106, 155,  67, 124, 142, 250,
     10,   0,   0,   0,   1,   0,   2,   0,
    180,  97, 115, 183, 249, 192, 150, 193,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 116,  46,  99,  97, 112, 110,
    112,  58,  70,  76,  84,  75, 101, 114,
    110, 101, 108,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
    112, 104, 105,  80, 108,  97, 110, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 117, 114, 110,  76, 105, 109, 105,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  97, 110,  99, 101,
     76, 105, 109, 105, 116,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 101, 112,  76, 105, 109, 105,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 101, 112,  83, 105, 122, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114, 105, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     68, 155, 219,  21,  86, 152, 217, 195,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 101, 108, 100,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     33, 119, 255, 124, 208, 144,  98, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fa8e7c439b6a9377 = b_fa8e7c439b6a9377.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fa8e7c439b6a9377[] = {
  &s_c3d9985615db9b44,
  &s_eb6290d07cff7721,
};
static const uint16_t m_fa8e7c439b6a9377[] = {2, 6, 5, 0, 3, 4, 1};
static const uint16_t i_fa8e7c439b6a9377[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_fa8e7c439b6a9377 = {
  0xfa8e7c439b6a9377, b_fa8e7c439b6a9377.words, 133, d_fa8e7c439b6a9377, m_fa8e7c439b6a9377,
  2, 7, i_fa8e7c439b6a9377, nullptr, nullptr, { &s_fa8e7c439b6a9377, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace fsc {

// FLTKernelState
constexpr uint16_t FLTKernelState::_capnpPrivate::dataWordSize;
constexpr uint16_t FLTKernelState::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FLTKernelState::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FLTKernelState::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FLTKernelEvent
constexpr uint16_t FLTKernelEvent::_capnpPrivate::dataWordSize;
constexpr uint16_t FLTKernelEvent::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FLTKernelEvent::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FLTKernelEvent::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FLTKernelEvent::PhiPlaneIntersection
constexpr uint16_t FLTKernelEvent::PhiPlaneIntersection::_capnpPrivate::dataWordSize;
constexpr uint16_t FLTKernelEvent::PhiPlaneIntersection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FLTKernelEvent::PhiPlaneIntersection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FLTKernelEvent::PhiPlaneIntersection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FLTKernelData
constexpr uint16_t FLTKernelData::_capnpPrivate::dataWordSize;
constexpr uint16_t FLTKernelData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FLTKernelData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FLTKernelData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FLTKernelData::Entry
constexpr uint16_t FLTKernelData::Entry::_capnpPrivate::dataWordSize;
constexpr uint16_t FLTKernelData::Entry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FLTKernelData::Entry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FLTKernelData::Entry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FLTKernelRequest
constexpr uint16_t FLTKernelRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t FLTKernelRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FLTKernelRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FLTKernelRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

