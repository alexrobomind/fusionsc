// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: data.capnp

#include "data.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<113> b_c85b8a7758032008 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
     11,   0,   0,   0,   3,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,   7,   1,   0,   0,
    137,   1,   0,   0,   7,   0,   0,   0,
    137,   1,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    172, 217, 177, 221, 151, 154, 127, 152,
      9,   0,   0,   0,  74,   0,   0,   0,
     29,  47, 190, 232, 103, 128,  50, 194,
      9,   0,   0,   0,  74,   0,   0,   0,
     77, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 101,  99, 101, 105, 118, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57, 167, 140,  32, 220, 233,  61, 128,
     55,  97, 128, 247, 192, 176, 101, 230,
    113,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   0,   0,   1,   0,
    128,   0,   0,   0,   0,   0,   1,   0,
    145,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     51, 203,  79, 237, 210,   0, 216, 198,
     29,  63,  92, 129, 126, 142,  25, 227,
    133,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   0,   0,   1,   0,
    148,   0,   0,   0,   0,   0,   1,   0,
    165,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    139,  19, 182,  37,  48, 143,  73, 238,
     93, 115, 206, 221, 210,  59,  52, 227,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   0,   0,   1,   0,
    168,   0,   0,   0,   0,   0,   1,   0,
    185,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    242,  73,   2, 232, 174,  64,  37, 172,
    124, 107, 154, 174, 224, 199,  70, 164,
    173,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   0,   0,   1,   0,
    188,   0,   0,   0,   0,   0,   1,   0,
    205,   0,   0,   0,   7,   0,   0,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114,  97, 119,  66, 121, 116, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99,  97, 112,  84,  97,  98, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    116, 114,  97, 110, 115, 109, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c85b8a7758032008 = b_c85b8a7758032008.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c85b8a7758032008[] = {
  &s_803de9dc208ca739,
  &s_a446c7e0ae9a6b7c,
  &s_ac2540aee80249f2,
  &s_c6d800d2ed4fcb33,
  &s_e3198e7e815c3f1d,
  &s_e3343bd2ddce735d,
  &s_e665b0c0f7806137,
  &s_ee498f3025b6138b,
};
static const uint16_t m_c85b8a7758032008[] = {2, 0, 1, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_c85b8a7758032008[] = {
  { 33554432,  ::fsc::DataRef< ::capnp::AnyPointer>::MetadataParams::_capnpPrivate::brand() },
  { 33554433,  ::fsc::DataRef< ::capnp::AnyPointer>::RawBytesParams::_capnpPrivate::brand() },
  { 33554434,  ::fsc::DataRef< ::capnp::AnyPointer>::CapTableParams::_capnpPrivate::brand() },
  { 33554435,  ::fsc::DataRef< ::capnp::AnyPointer>::TransmitParams::_capnpPrivate::brand() },
  { 50331648,  ::fsc::DataRef< ::capnp::AnyPointer>::MetadataResults::_capnpPrivate::brand() },
  { 50331649,  ::fsc::DataRef< ::capnp::AnyPointer>::RawBytesResults::_capnpPrivate::brand() },
  { 50331650,  ::fsc::DataRef< ::capnp::AnyPointer>::CapTableResults::_capnpPrivate::brand() },
  { 50331651,  ::fsc::DataRef< ::capnp::AnyPointer>::TransmitResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_c85b8a7758032008 = {
  0xc85b8a7758032008, b_c85b8a7758032008.words, 113, d_c85b8a7758032008, m_c85b8a7758032008,
  8, 4, nullptr, nullptr, nullptr, { &s_c85b8a7758032008, nullptr, bd_c85b8a7758032008, 0, sizeof(bd_c85b8a7758032008) / sizeof(bd_c85b8a7758032008[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_987f9a97ddb1d9ac = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    172, 217, 177, 221, 151, 154, 127, 152,
     19,   0,   0,   0,   1,   0,   3,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  77, 101, 116,  97, 100,
     97, 116,  97,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,  73, 100,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112,  84,  97,  98, 108, 101,
     83, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  83, 105, 122, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_987f9a97ddb1d9ac = b_987f9a97ddb1d9ac.words;
#if !CAPNP_LITE
static const uint16_t m_987f9a97ddb1d9ac[] = {2, 3, 0, 1};
static const uint16_t i_987f9a97ddb1d9ac[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_987f9a97ddb1d9ac = {
  0x987f9a97ddb1d9ac, b_987f9a97ddb1d9ac.words, 80, nullptr, m_987f9a97ddb1d9ac,
  0, 4, i_987f9a97ddb1d9ac, nullptr, nullptr, { &s_987f9a97ddb1d9ac, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_c2328067e8be2f1d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  47, 190, 232, 103, 128,  50, 194,
     19,   0,   0,   0,   3,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 199,   0,   0,   0,
    249,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  82, 101,  99, 101, 105,
    118, 101, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    155, 172, 175,  78,  46, 215, 188, 245,
     36, 205, 238, 188,  36, 135, 166, 202,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   0,   0,   1,   0,
     92,   0,   0,   0,   0,   0,   1,   0,
    109,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    236, 145,  23, 154, 243, 239, 250, 193,
    110, 177, 192, 119,  51, 154,  95, 153,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     31, 218,  14, 122, 152, 115, 241, 128,
     68, 218,  97,  75, 101,  71, 228, 223,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   0,   0,   1,   0,
    104,   0,   0,   0,   0,   0,   1,   0,
    121,   0,   0,   0,   7,   0,   0,   0,
     98, 101, 103, 105, 110,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101,  99, 101, 105, 118, 101,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    100, 111, 110, 101,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c2328067e8be2f1d = b_c2328067e8be2f1d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c2328067e8be2f1d[] = {
  &s_80f173987a0eda1f,
  &s_995f9a3377c0b16e,
  &s_c1faeff39a1791ec,
  &s_caa68724bceecd24,
  &s_dfe447654b61da44,
  &s_f5bcd72e4eafac9b,
};
static const uint16_t m_c2328067e8be2f1d[] = {0, 2, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_c2328067e8be2f1d[] = {
  { 33554432,  ::fsc::DataRef< ::capnp::AnyPointer>::Receiver::BeginParams::_capnpPrivate::brand() },
  { 33554433,  ::fsc::DataRef< ::capnp::AnyPointer>::Receiver::ReceiveParams::_capnpPrivate::brand() },
  { 33554434,  ::fsc::DataRef< ::capnp::AnyPointer>::Receiver::DoneParams::_capnpPrivate::brand() },
  { 50331648,  ::fsc::DataRef< ::capnp::AnyPointer>::Receiver::BeginResults::_capnpPrivate::brand() },
  { 50331650,  ::fsc::DataRef< ::capnp::AnyPointer>::Receiver::DoneResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_c2328067e8be2f1d = {
  0xc2328067e8be2f1d, b_c2328067e8be2f1d.words, 74, d_c2328067e8be2f1d, m_c2328067e8be2f1d,
  6, 3, nullptr, nullptr, nullptr, { &s_c2328067e8be2f1d, nullptr, bd_c2328067e8be2f1d, 0, sizeof(bd_c2328067e8be2f1d) / sizeof(bd_c2328067e8be2f1d[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_f5bcd72e4eafac9b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155, 172, 175,  78,  46, 215, 188, 245,
     28,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  82, 101,  99, 101, 105,
    118, 101, 114,  46,  98, 101, 103, 105,
    110,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  66, 121, 116, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5bcd72e4eafac9b = b_f5bcd72e4eafac9b.words;
#if !CAPNP_LITE
static const uint16_t m_f5bcd72e4eafac9b[] = {0};
static const uint16_t i_f5bcd72e4eafac9b[] = {0};
const ::capnp::_::RawSchema s_f5bcd72e4eafac9b = {
  0xf5bcd72e4eafac9b, b_f5bcd72e4eafac9b.words, 35, nullptr, m_f5bcd72e4eafac9b,
  0, 1, i_f5bcd72e4eafac9b, nullptr, nullptr, { &s_f5bcd72e4eafac9b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_caa68724bceecd24 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36, 205, 238, 188,  36, 135, 166, 202,
     28,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  82, 101,  99, 101, 105,
    118, 101, 114,  46,  98, 101, 103, 105,
    110,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_caa68724bceecd24 = b_caa68724bceecd24.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_caa68724bceecd24 = {
  0xcaa68724bceecd24, b_caa68724bceecd24.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_caa68724bceecd24, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c1faeff39a1791ec = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    236, 145,  23, 154, 243, 239, 250, 193,
     28,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  82, 101,  99, 101, 105,
    118, 101, 114,  46, 114, 101,  99, 101,
    105, 118, 101,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1faeff39a1791ec = b_c1faeff39a1791ec.words;
#if !CAPNP_LITE
static const uint16_t m_c1faeff39a1791ec[] = {0};
static const uint16_t i_c1faeff39a1791ec[] = {0};
const ::capnp::_::RawSchema s_c1faeff39a1791ec = {
  0xc1faeff39a1791ec, b_c1faeff39a1791ec.words, 34, nullptr, m_c1faeff39a1791ec,
  0, 1, i_c1faeff39a1791ec, nullptr, nullptr, { &s_c1faeff39a1791ec, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_80f173987a0eda1f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     31, 218,  14, 122, 152, 115, 241, 128,
     28,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  82, 101,  99, 101, 105,
    118, 101, 114,  46, 100, 111, 110, 101,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_80f173987a0eda1f = b_80f173987a0eda1f.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_80f173987a0eda1f = {
  0x80f173987a0eda1f, b_80f173987a0eda1f.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_80f173987a0eda1f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_dfe447654b61da44 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     68, 218,  97,  75, 101,  71, 228, 223,
     28,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  82, 101,  99, 101, 105,
    118, 101, 114,  46, 100, 111, 110, 101,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dfe447654b61da44 = b_dfe447654b61da44.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_dfe447654b61da44 = {
  0xdfe447654b61da44, b_dfe447654b61da44.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_dfe447654b61da44, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_803de9dc208ca739 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     57, 167, 140,  32, 220, 233,  61, 128,
     19,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46, 109, 101, 116,  97, 100,
     97, 116,  97,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_803de9dc208ca739 = b_803de9dc208ca739.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_803de9dc208ca739 = {
  0x803de9dc208ca739, b_803de9dc208ca739.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_803de9dc208ca739, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_e665b0c0f7806137 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     55,  97, 128, 247, 192, 176, 101, 230,
     19,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46, 109, 101, 116,  97, 100,
     97, 116,  97,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    172, 217, 177, 221, 151, 154, 127, 152,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e665b0c0f7806137 = b_e665b0c0f7806137.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e665b0c0f7806137[] = {
  &s_987f9a97ddb1d9ac,
};
static const uint16_t m_e665b0c0f7806137[] = {0};
static const uint16_t i_e665b0c0f7806137[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_e665b0c0f7806137[] = {
  { 16777216,  ::fsc::DataRef< ::capnp::AnyPointer>::Metadata::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_e665b0c0f7806137 = {
  0xe665b0c0f7806137, b_e665b0c0f7806137.words, 39, d_e665b0c0f7806137, m_e665b0c0f7806137,
  1, 1, i_e665b0c0f7806137, nullptr, nullptr, { &s_e665b0c0f7806137, nullptr, bd_e665b0c0f7806137, 0, sizeof(bd_e665b0c0f7806137) / sizeof(bd_e665b0c0f7806137[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_c6d800d2ed4fcb33 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51, 203,  79, 237, 210,   0, 216, 198,
     19,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46, 114,  97, 119,  66, 121,
    116, 101, 115,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 100,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c6d800d2ed4fcb33 = b_c6d800d2ed4fcb33.words;
#if !CAPNP_LITE
static const uint16_t m_c6d800d2ed4fcb33[] = {1, 0};
static const uint16_t i_c6d800d2ed4fcb33[] = {0, 1};
const ::capnp::_::RawSchema s_c6d800d2ed4fcb33 = {
  0xc6d800d2ed4fcb33, b_c6d800d2ed4fcb33.words, 48, nullptr, m_c6d800d2ed4fcb33,
  0, 2, i_c6d800d2ed4fcb33, nullptr, nullptr, { &s_c6d800d2ed4fcb33, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_e3198e7e815c3f1d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  63,  92, 129, 126, 142,  25, 227,
     19,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46, 114,  97, 119,  66, 121,
    116, 101, 115,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3198e7e815c3f1d = b_e3198e7e815c3f1d.words;
#if !CAPNP_LITE
static const uint16_t m_e3198e7e815c3f1d[] = {0};
static const uint16_t i_e3198e7e815c3f1d[] = {0};
const ::capnp::_::RawSchema s_e3198e7e815c3f1d = {
  0xe3198e7e815c3f1d, b_e3198e7e815c3f1d.words, 33, nullptr, m_e3198e7e815c3f1d,
  0, 1, i_e3198e7e815c3f1d, nullptr, nullptr, { &s_e3198e7e815c3f1d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_ee498f3025b6138b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139,  19, 182,  37,  48, 143,  73, 238,
     19,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  99,  97, 112,  84,  97,
     98, 108, 101,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ee498f3025b6138b = b_ee498f3025b6138b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ee498f3025b6138b = {
  0xee498f3025b6138b, b_ee498f3025b6138b.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ee498f3025b6138b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_e3343bd2ddce735d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 115, 206, 221, 210,  59,  52, 227,
     19,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46,  99,  97, 112,  84,  97,
     98, 108, 101,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    116,  97,  98, 108, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3343bd2ddce735d = b_e3343bd2ddce735d.words;
#if !CAPNP_LITE
static const uint16_t m_e3343bd2ddce735d[] = {0};
static const uint16_t i_e3343bd2ddce735d[] = {0};
const ::capnp::_::RawSchema s_e3343bd2ddce735d = {
  0xe3343bd2ddce735d, b_e3343bd2ddce735d.words, 37, nullptr, m_e3343bd2ddce735d,
  0, 1, i_e3343bd2ddce735d, nullptr, nullptr, { &s_e3343bd2ddce735d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_ac2540aee80249f2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    242,  73,   2, 232, 174,  64,  37, 172,
     19,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46, 116, 114,  97, 110, 115,
    109, 105, 116,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 100,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 101, 105, 118, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     29,  47, 190, 232, 103, 128,  50, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ac2540aee80249f2 = b_ac2540aee80249f2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ac2540aee80249f2[] = {
  &s_c2328067e8be2f1d,
};
static const uint16_t m_ac2540aee80249f2[] = {1, 2, 0};
static const uint16_t i_ac2540aee80249f2[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ac2540aee80249f2[] = {
  { 16777218,  ::fsc::DataRef< ::capnp::AnyPointer>::Receiver::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ac2540aee80249f2 = {
  0xac2540aee80249f2, b_ac2540aee80249f2.words, 69, d_ac2540aee80249f2, m_ac2540aee80249f2,
  1, 3, i_ac2540aee80249f2, nullptr, nullptr, { &s_ac2540aee80249f2, nullptr, bd_ac2540aee80249f2, 0, sizeof(bd_ac2540aee80249f2) / sizeof(bd_ac2540aee80249f2[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a446c7e0ae9a6b7c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    124, 107, 154, 174, 224, 199,  70, 164,
     19,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  82,
    101, 102,  46, 116, 114,  97, 110, 115,
    109, 105, 116,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a446c7e0ae9a6b7c = b_a446c7e0ae9a6b7c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a446c7e0ae9a6b7c = {
  0xa446c7e0ae9a6b7c, b_a446c7e0ae9a6b7c.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a446c7e0ae9a6b7c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_c6d48902ddb7e122 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     34, 225, 183, 221,   2, 137, 212, 198,
     11,   0,   0,   0,   3,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 199,   0,   0,   0,
    169,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    101, 114, 118, 105,  99, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    134, 105,  34, 142,   1,  80, 244, 148,
    195,  43,  18, 211, 140,  19, 210, 146,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  15,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     24,  59, 168, 178, 113, 248,  36, 134,
    163, 219, 183,  43, 238, 197, 120, 191,
     65,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  15,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     62, 110,  48, 127,  21, 247, 164, 237,
    123, 183,  57, 226, 130, 204, 109, 206,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  15,   0,   0,   0,
    115, 116, 111, 114, 101,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 111, 110, 101,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0,
     99,  97,  99, 104, 101,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c6d48902ddb7e122 = b_c6d48902ddb7e122.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c6d48902ddb7e122[] = {
  &s_8624f871b2a83b18,
  &s_92d2138cd3122bc3,
  &s_94f450018e226986,
  &s_bf78c5ee2bb7dba3,
  &s_ce6dcc82e239b77b,
  &s_eda4f7157f306e3e,
};
static const uint16_t m_c6d48902ddb7e122[] = {2, 1, 0};
const ::capnp::_::RawSchema s_c6d48902ddb7e122 = {
  0xc6d48902ddb7e122, b_c6d48902ddb7e122.words, 54, d_c6d48902ddb7e122, m_c6d48902ddb7e122,
  6, 3, nullptr, nullptr, nullptr, { &s_c6d48902ddb7e122, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_94f450018e226986 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134, 105,  34, 142,   1,  80, 244, 148,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    101, 114, 118, 105,  99, 101,  46, 115,
    116, 111, 114, 101,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    134, 105,  34, 142,   1,  80, 244, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94f450018e226986 = b_94f450018e226986.words;
#if !CAPNP_LITE
static const uint16_t m_94f450018e226986[] = {1, 0};
static const uint16_t i_94f450018e226986[] = {0, 1};
const ::capnp::_::RawSchema s_94f450018e226986 = {
  0x94f450018e226986, b_94f450018e226986.words, 51, nullptr, m_94f450018e226986,
  0, 2, i_94f450018e226986, nullptr, nullptr, { &s_94f450018e226986, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_92d2138cd3122bc3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195,  43,  18, 211, 140,  19, 210, 146,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    101, 114, 118, 105,  99, 101,  46, 115,
    116, 111, 114, 101,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    195,  43,  18, 211, 140,  19, 210, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92d2138cd3122bc3 = b_92d2138cd3122bc3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_92d2138cd3122bc3[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_92d2138cd3122bc3[] = {0};
static const uint16_t i_92d2138cd3122bc3[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_92d2138cd3122bc3[] = {
  { 16777216,  ::fsc::DataRef< ::capnp::AnyPointer>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_92d2138cd3122bc3 = {
  0x92d2138cd3122bc3, b_92d2138cd3122bc3.words, 48, d_92d2138cd3122bc3, m_92d2138cd3122bc3,
  1, 1, i_92d2138cd3122bc3, nullptr, nullptr, { &s_92d2138cd3122bc3, nullptr, bd_92d2138cd3122bc3, 0, sizeof(bd_92d2138cd3122bc3) / sizeof(bd_92d2138cd3122bc3[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_8624f871b2a83b18 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24,  59, 168, 178, 113, 248,  36, 134,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    101, 114, 118, 105,  99, 101,  46,  99,
    108, 111, 110, 101,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     24,  59, 168, 178, 113, 248,  36, 134,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8624f871b2a83b18 = b_8624f871b2a83b18.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8624f871b2a83b18[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_8624f871b2a83b18[] = {0};
static const uint16_t i_8624f871b2a83b18[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_8624f871b2a83b18[] = {
  { 16777216,  ::fsc::DataRef< ::capnp::AnyPointer>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_8624f871b2a83b18 = {
  0x8624f871b2a83b18, b_8624f871b2a83b18.words, 48, d_8624f871b2a83b18, m_8624f871b2a83b18,
  1, 1, i_8624f871b2a83b18, nullptr, nullptr, { &s_8624f871b2a83b18, nullptr, bd_8624f871b2a83b18, 0, sizeof(bd_8624f871b2a83b18) / sizeof(bd_8624f871b2a83b18[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_bf78c5ee2bb7dba3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    163, 219, 183,  43, 238, 197, 120, 191,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    101, 114, 118, 105,  99, 101,  46,  99,
    108, 111, 110, 101,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    163, 219, 183,  43, 238, 197, 120, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf78c5ee2bb7dba3 = b_bf78c5ee2bb7dba3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bf78c5ee2bb7dba3[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_bf78c5ee2bb7dba3[] = {0};
static const uint16_t i_bf78c5ee2bb7dba3[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_bf78c5ee2bb7dba3[] = {
  { 16777216,  ::fsc::DataRef< ::capnp::AnyPointer>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_bf78c5ee2bb7dba3 = {
  0xbf78c5ee2bb7dba3, b_bf78c5ee2bb7dba3.words, 48, d_bf78c5ee2bb7dba3, m_bf78c5ee2bb7dba3,
  1, 1, i_bf78c5ee2bb7dba3, nullptr, nullptr, { &s_bf78c5ee2bb7dba3, nullptr, bd_bf78c5ee2bb7dba3, 0, sizeof(bd_bf78c5ee2bb7dba3) / sizeof(bd_bf78c5ee2bb7dba3[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_eda4f7157f306e3e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 110,  48, 127,  21, 247, 164, 237,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    101, 114, 118, 105,  99, 101,  46,  99,
     97,  99, 104, 101,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     62, 110,  48, 127,  21, 247, 164, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eda4f7157f306e3e = b_eda4f7157f306e3e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eda4f7157f306e3e[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_eda4f7157f306e3e[] = {0};
static const uint16_t i_eda4f7157f306e3e[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_eda4f7157f306e3e[] = {
  { 16777216,  ::fsc::DataRef< ::capnp::AnyPointer>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_eda4f7157f306e3e = {
  0xeda4f7157f306e3e, b_eda4f7157f306e3e.words, 48, d_eda4f7157f306e3e, m_eda4f7157f306e3e,
  1, 1, i_eda4f7157f306e3e, nullptr, nullptr, { &s_eda4f7157f306e3e, nullptr, bd_eda4f7157f306e3e, 0, sizeof(bd_eda4f7157f306e3e) / sizeof(bd_eda4f7157f306e3e[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_ce6dcc82e239b77b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123, 183,  57, 226, 130, 204, 109, 206,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    101, 114, 118, 105,  99, 101,  46,  99,
     97,  99, 104, 101,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    123, 183,  57, 226, 130, 204, 109, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ce6dcc82e239b77b = b_ce6dcc82e239b77b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ce6dcc82e239b77b[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_ce6dcc82e239b77b[] = {0};
static const uint16_t i_ce6dcc82e239b77b[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ce6dcc82e239b77b[] = {
  { 16777216,  ::fsc::DataRef< ::capnp::AnyPointer>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ce6dcc82e239b77b = {
  0xce6dcc82e239b77b, b_ce6dcc82e239b77b.words, 48, d_ce6dcc82e239b77b, m_ce6dcc82e239b77b,
  1, 1, i_ce6dcc82e239b77b, nullptr, nullptr, { &s_ce6dcc82e239b77b, nullptr, bd_ce6dcc82e239b77b, 0, sizeof(bd_ce6dcc82e239b77b) / sizeof(bd_ce6dcc82e239b77b[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_a0d58e813a080128 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40,   1,   8,  58, 129, 142, 213, 160,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  65, 114,  99, 104, 105,
    118, 101,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    192, 252, 231,  37, 111,  31, 180, 216,
      9,   0,   0,   0, 122,   0,   0,   0,
     85,  23,  35,  77, 243, 235,  98, 250,
      9,   0,   0,   0,  50,   0,   0,   0,
     67,  97, 112,  97,  98, 105, 108, 105,
    116, 121,  73, 110, 102, 111,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     85,  23,  35,  77, 243, 235,  98, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 114,  97,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     85,  23,  35,  77, 243, 235,  98, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0d58e813a080128 = b_a0d58e813a080128.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a0d58e813a080128[] = {
  &s_fa62ebf34d231755,
};
static const uint16_t m_a0d58e813a080128[] = {1, 0};
static const uint16_t i_a0d58e813a080128[] = {0, 1};
const ::capnp::_::RawSchema s_a0d58e813a080128 = {
  0xa0d58e813a080128, b_a0d58e813a080128.words, 58, d_a0d58e813a080128, m_a0d58e813a080128,
  1, 2, i_a0d58e813a080128, nullptr, nullptr, { &s_a0d58e813a080128, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_d8b41f6f25e7fcc0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192, 252, 231,  37, 111,  31, 180, 216,
     19,   0,   0,   0,   1,   0,   1,   0,
     40,   1,   8,  58, 129, 142, 213, 160,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  65, 114,  99, 104, 105,
    118, 101,  46,  67,  97, 112,  97,  98,
    105, 108, 105, 116, 121,  73, 110, 102,
    111,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     64,   7, 105,  38,  79, 221,  48, 208,
     13,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  82, 101, 102,  73,
    110, 102, 111,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8b41f6f25e7fcc0 = b_d8b41f6f25e7fcc0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d8b41f6f25e7fcc0[] = {
  &s_d030dd4f26690740,
};
static const uint16_t m_d8b41f6f25e7fcc0[] = {0};
static const uint16_t i_d8b41f6f25e7fcc0[] = {0};
const ::capnp::_::RawSchema s_d8b41f6f25e7fcc0 = {
  0xd8b41f6f25e7fcc0, b_d8b41f6f25e7fcc0.words, 28, d_d8b41f6f25e7fcc0, m_d8b41f6f25e7fcc0,
  1, 1, i_d8b41f6f25e7fcc0, nullptr, nullptr, { &s_d8b41f6f25e7fcc0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_d030dd4f26690740 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     64,   7, 105,  38,  79, 221,  48, 208,
     34,   0,   0,   0,   1,   0,   1,   0,
    192, 252, 231,  37, 111,  31, 180, 216,
      1,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  65, 114,  99, 104, 105,
    118, 101,  46,  67,  97, 112,  97,  98,
    105, 108, 105, 116, 121,  73, 110, 102,
    111,  46, 100,  97, 116,  97,  82, 101,
    102,  73, 110, 102, 111,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    110, 111,  68,  97, 116,  97,  82, 101,
    102,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 102,  73,  68,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d030dd4f26690740 = b_d030dd4f26690740.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d030dd4f26690740[] = {
  &s_d8b41f6f25e7fcc0,
};
static const uint16_t m_d030dd4f26690740[] = {0, 1};
static const uint16_t i_d030dd4f26690740[] = {0, 1};
const ::capnp::_::RawSchema s_d030dd4f26690740 = {
  0xd030dd4f26690740, b_d030dd4f26690740.words, 50, d_d030dd4f26690740, m_d030dd4f26690740,
  1, 2, i_d030dd4f26690740, nullptr, nullptr, { &s_d030dd4f26690740, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<87> b_fa62ebf34d231755 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85,  23,  35,  77, 243, 235,  98, 250,
     19,   0,   0,   0,   1,   0,   1,   0,
     40,   1,   8,  58, 129, 142, 213, 160,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  65, 114,  99, 104, 105,
    118, 101,  46,  69, 110, 116, 114, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112,  97,  98, 105, 108, 105,
    116, 105, 101, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    192, 252, 231,  37, 111,  31, 180, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,  73, 100,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fa62ebf34d231755 = b_fa62ebf34d231755.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fa62ebf34d231755[] = {
  &s_d8b41f6f25e7fcc0,
};
static const uint16_t m_fa62ebf34d231755[] = {2, 1, 0, 3};
static const uint16_t i_fa62ebf34d231755[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_fa62ebf34d231755 = {
  0xfa62ebf34d231755, b_fa62ebf34d231755.words, 87, d_fa62ebf34d231755, m_fa62ebf34d231755,
  1, 4, i_fa62ebf34d231755, nullptr, nullptr, { &s_fa62ebf34d231755, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_eb6290d07cff7721 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33, 119, 255, 124, 208, 144,  98, 235,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  70, 108, 111,  97, 116,
     54,  52,  84, 101, 110, 115, 111, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eb6290d07cff7721 = b_eb6290d07cff7721.words;
#if !CAPNP_LITE
static const uint16_t m_eb6290d07cff7721[] = {1, 0};
static const uint16_t i_eb6290d07cff7721[] = {0, 1};
const ::capnp::_::RawSchema s_eb6290d07cff7721 = {
  0xeb6290d07cff7721, b_eb6290d07cff7721.words, 56, nullptr, m_eb6290d07cff7721,
  0, 2, i_eb6290d07cff7721, nullptr, nullptr, { &s_eb6290d07cff7721, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_f229943265589017 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23, 144,  88, 101,  50, 148,  41, 242,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  70, 108, 111,  97, 116,
     51,  50,  84, 101, 110, 115, 111, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f229943265589017 = b_f229943265589017.words;
#if !CAPNP_LITE
static const uint16_t m_f229943265589017[] = {1, 0};
static const uint16_t i_f229943265589017[] = {0, 1};
const ::capnp::_::RawSchema s_f229943265589017 = {
  0xf229943265589017, b_f229943265589017.words, 56, nullptr, m_f229943265589017,
  0, 2, i_f229943265589017, nullptr, nullptr, { &s_f229943265589017, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_b99928e5f0483045 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69,  48,  72, 240, 229,  40, 153, 185,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  73, 110, 116,  54,  52,
     84, 101, 110, 115, 111, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b99928e5f0483045 = b_b99928e5f0483045.words;
#if !CAPNP_LITE
static const uint16_t m_b99928e5f0483045[] = {1, 0};
static const uint16_t i_b99928e5f0483045[] = {0, 1};
const ::capnp::_::RawSchema s_b99928e5f0483045 = {
  0xb99928e5f0483045, b_b99928e5f0483045.words, 55, nullptr, m_b99928e5f0483045,
  0, 2, i_b99928e5f0483045, nullptr, nullptr, { &s_b99928e5f0483045, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_e0e3b9db82552046 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     70,  32,  85, 130, 219, 185, 227, 224,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  85,  73, 110, 116,  54,
     52,  84, 101, 110, 115, 111, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e0e3b9db82552046 = b_e0e3b9db82552046.words;
#if !CAPNP_LITE
static const uint16_t m_e0e3b9db82552046[] = {1, 0};
static const uint16_t i_e0e3b9db82552046[] = {0, 1};
const ::capnp::_::RawSchema s_e0e3b9db82552046 = {
  0xe0e3b9db82552046, b_e0e3b9db82552046.words, 55, nullptr, m_e0e3b9db82552046,
  0, 2, i_e0e3b9db82552046, nullptr, nullptr, { &s_e0e3b9db82552046, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_e94cdc9a58f345a8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    168,  69, 243,  88, 154, 220,  76, 233,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  73, 110, 116,  51,  50,
     84, 101, 110, 115, 111, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e94cdc9a58f345a8 = b_e94cdc9a58f345a8.words;
#if !CAPNP_LITE
static const uint16_t m_e94cdc9a58f345a8[] = {1, 0};
static const uint16_t i_e94cdc9a58f345a8[] = {0, 1};
const ::capnp::_::RawSchema s_e94cdc9a58f345a8 = {
  0xe94cdc9a58f345a8, b_e94cdc9a58f345a8.words, 55, nullptr, m_e94cdc9a58f345a8,
  0, 2, i_e94cdc9a58f345a8, nullptr, nullptr, { &s_e94cdc9a58f345a8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_873fbce7ac04b2fa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    250, 178,   4, 172, 231, 188,  63, 135,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  85,  73, 110, 116,  51,
     50,  84, 101, 110, 115, 111, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_873fbce7ac04b2fa = b_873fbce7ac04b2fa.words;
#if !CAPNP_LITE
static const uint16_t m_873fbce7ac04b2fa[] = {1, 0};
static const uint16_t i_873fbce7ac04b2fa[] = {0, 1};
const ::capnp::_::RawSchema s_873fbce7ac04b2fa = {
  0x873fbce7ac04b2fa, b_873fbce7ac04b2fa.words, 55, nullptr, m_873fbce7ac04b2fa,
  0, 2, i_873fbce7ac04b2fa, nullptr, nullptr, { &s_873fbce7ac04b2fa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_e58f80c73717e663 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 230,  23,  55, 199, 128, 143, 229,
     11,   0,   0,   0,   1,   0,   0,   0,
      1, 183, 129,  99, 203,  41, 108, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  15,   0,   0,   0,
    100,  97, 116,  97,  46,  99,  97, 112,
    110, 112,  58,  83, 104,  97, 112, 101,
    100,  76, 105, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     99, 230,  23,  55, 199, 128, 143, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  74,   0,   0,   0,
     76, 105, 115, 116,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e58f80c73717e663 = b_e58f80c73717e663.words;
#if !CAPNP_LITE
static const uint16_t m_e58f80c73717e663[] = {1, 0};
static const uint16_t i_e58f80c73717e663[] = {0, 1};
const ::capnp::_::RawSchema s_e58f80c73717e663 = {
  0xe58f80c73717e663, b_e58f80c73717e663.words, 55, nullptr, m_e58f80c73717e663,
  0, 2, i_e58f80c73717e663, nullptr, nullptr, { &s_e58f80c73717e663, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace fsc {

#if !CAPNP_LITE
::kj::Promise<void> DataService::Server::store(StoreContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "data.capnp:DataService", "store",
      0xc6d48902ddb7e122ull, 0);
}
::kj::Promise<void> DataService::Server::clone(CloneContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "data.capnp:DataService", "clone",
      0xc6d48902ddb7e122ull, 1);
}
::kj::Promise<void> DataService::Server::cache(CacheContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "data.capnp:DataService", "cache",
      0xc6d48902ddb7e122ull, 2);
}
::capnp::Capability::Server::DispatchCallResult DataService::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xc6d48902ddb7e122ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("data.capnp:DataService", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult DataService::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        store(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::DataService::StoreParams<>,  ::fsc::DataService::StoreResults<>>(context)),
        false
      };
    case 1:
      return {
        clone(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::DataService::CloneParams<>,  ::fsc::DataService::CloneResults<>>(context)),
        false
      };
    case 2:
      return {
        cache(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::DataService::CacheParams<>,  ::fsc::DataService::CacheResults<>>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "data.capnp:DataService",
          0xc6d48902ddb7e122ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// DataService
#if !CAPNP_LITE
constexpr ::capnp::Kind DataService::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DataService::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Archive
constexpr uint16_t Archive::_capnpPrivate::dataWordSize;
constexpr uint16_t Archive::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Archive::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Archive::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Archive::CapabilityInfo
constexpr uint16_t Archive::CapabilityInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t Archive::CapabilityInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Archive::CapabilityInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Archive::CapabilityInfo::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Archive::CapabilityInfo::DataRefInfo
constexpr uint16_t Archive::CapabilityInfo::DataRefInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t Archive::CapabilityInfo::DataRefInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Archive::CapabilityInfo::DataRefInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Archive::CapabilityInfo::DataRefInfo::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Archive::Entry
constexpr uint16_t Archive::Entry::_capnpPrivate::dataWordSize;
constexpr uint16_t Archive::Entry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Archive::Entry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Archive::Entry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Float64Tensor
constexpr uint16_t Float64Tensor::_capnpPrivate::dataWordSize;
constexpr uint16_t Float64Tensor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Float64Tensor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Float64Tensor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Float32Tensor
constexpr uint16_t Float32Tensor::_capnpPrivate::dataWordSize;
constexpr uint16_t Float32Tensor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Float32Tensor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Float32Tensor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Int64Tensor
constexpr uint16_t Int64Tensor::_capnpPrivate::dataWordSize;
constexpr uint16_t Int64Tensor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Int64Tensor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Int64Tensor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// UInt64Tensor
constexpr uint16_t UInt64Tensor::_capnpPrivate::dataWordSize;
constexpr uint16_t UInt64Tensor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UInt64Tensor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UInt64Tensor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Int32Tensor
constexpr uint16_t Int32Tensor::_capnpPrivate::dataWordSize;
constexpr uint16_t Int32Tensor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Int32Tensor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Int32Tensor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// UInt32Tensor
constexpr uint16_t UInt32Tensor::_capnpPrivate::dataWordSize;
constexpr uint16_t UInt32Tensor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UInt32Tensor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UInt32Tensor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

