// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: w7x.capnp

#include "w7x.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<40> b_a6b69fa894c1e586 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134, 229, 193, 148, 168, 159, 182, 166,
     18,   0,   0,   0,   3,   0,   0,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 135,   0,   0,   0,
    113,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 188, 173, 146, 249,  10, 149, 152,
     17, 228,  27, 168,  36, 128,  49, 251,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     62, 216,  81, 159,  39,  57, 107, 139,
      9,  72, 147, 176, 146, 202, 126, 187,
     25,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  67, 111, 105, 108,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  67, 111, 110, 102, 105,
    103,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a6b69fa894c1e586 = b_a6b69fa894c1e586.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a6b69fa894c1e586[] = {
  &s_8b6b39279f51d83e,
  &s_98950af992adbc67,
  &s_bb7eca92b0934809,
  &s_fb318024a81be411,
};
static const uint16_t m_a6b69fa894c1e586[] = {0, 1};
const ::capnp::_::RawSchema s_a6b69fa894c1e586 = {
  0xa6b69fa894c1e586, b_a6b69fa894c1e586.words, 40, d_a6b69fa894c1e586, m_a6b69fa894c1e586,
  4, 2, nullptr, nullptr, nullptr, { &s_a6b69fa894c1e586, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_98950af992adbc67 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103, 188, 173, 146, 249,  10, 149, 152,
     26,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  46, 103, 101, 116,  67, 111, 105,
    108,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_98950af992adbc67 = b_98950af992adbc67.words;
#if !CAPNP_LITE
static const uint16_t m_98950af992adbc67[] = {0};
static const uint16_t i_98950af992adbc67[] = {0};
const ::capnp::_::RawSchema s_98950af992adbc67 = {
  0x98950af992adbc67, b_98950af992adbc67.words, 34, nullptr, m_98950af992adbc67,
  0, 1, i_98950af992adbc67, nullptr, nullptr, { &s_98950af992adbc67, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_8b6b39279f51d83e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 216,  81, 159,  39,  57, 107, 139,
     26,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  46, 103, 101, 116,  67, 111, 110,
    102, 105, 103,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8b6b39279f51d83e = b_8b6b39279f51d83e.words;
#if !CAPNP_LITE
static const uint16_t m_8b6b39279f51d83e[] = {0};
static const uint16_t i_8b6b39279f51d83e[] = {0};
const ::capnp::_::RawSchema s_8b6b39279f51d83e = {
  0x8b6b39279f51d83e, b_8b6b39279f51d83e.words, 34, nullptr, m_8b6b39279f51d83e,
  0, 1, i_8b6b39279f51d83e, nullptr, nullptr, { &s_8b6b39279f51d83e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_ae803183c9457ee7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    231, 126,  69, 201, 131,  49, 128, 174,
     18,   0,   0,   0,   3,   0,   0,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 135,   0,   0,   0,
    113,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    215, 121, 169, 174, 241, 249, 172, 240,
    140,  16, 186, 227, 218, 162,  52, 186,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    160, 124, 172, 242, 170, 196, 177, 251,
    145, 217, 139,  51,  87, 170,  31, 200,
     25,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  77, 101, 115, 104,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  65, 115, 115, 101, 109,
     98, 108, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_ae803183c9457ee7 = b_ae803183c9457ee7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ae803183c9457ee7[] = {
  &s_ba34a2dae3ba108c,
  &s_c81faa57338bd991,
  &s_f0acf9f1aea979d7,
  &s_fbb1c4aaf2ac7ca0,
};
static const uint16_t m_ae803183c9457ee7[] = {1, 0};
const ::capnp::_::RawSchema s_ae803183c9457ee7 = {
  0xae803183c9457ee7, b_ae803183c9457ee7.words, 40, d_ae803183c9457ee7, m_ae803183c9457ee7,
  4, 2, nullptr, nullptr, nullptr, { &s_ae803183c9457ee7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_f0acf9f1aea979d7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215, 121, 169, 174, 241, 249, 172, 240,
     31,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,  46, 103,
    101, 116,  77, 101, 115, 104,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f0acf9f1aea979d7 = b_f0acf9f1aea979d7.words;
#if !CAPNP_LITE
static const uint16_t m_f0acf9f1aea979d7[] = {0};
static const uint16_t i_f0acf9f1aea979d7[] = {0};
const ::capnp::_::RawSchema s_f0acf9f1aea979d7 = {
  0xf0acf9f1aea979d7, b_f0acf9f1aea979d7.words, 34, nullptr, m_f0acf9f1aea979d7,
  0, 1, i_f0acf9f1aea979d7, nullptr, nullptr, { &s_f0acf9f1aea979d7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_fbb1c4aaf2ac7ca0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    160, 124, 172, 242, 170, 196, 177, 251,
     31,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,  46, 103,
    101, 116,  65, 115, 115, 101, 109,  98,
    108, 121,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fbb1c4aaf2ac7ca0 = b_fbb1c4aaf2ac7ca0.words;
#if !CAPNP_LITE
static const uint16_t m_fbb1c4aaf2ac7ca0[] = {0};
static const uint16_t i_fbb1c4aaf2ac7ca0[] = {0};
const ::capnp::_::RawSchema s_fbb1c4aaf2ac7ca0 = {
  0xfbb1c4aaf2ac7ca0, b_fbb1c4aaf2ac7ca0.words, 35, nullptr, m_fbb1c4aaf2ac7ca0,
  0, 1, i_fbb1c4aaf2ac7ca0, nullptr, nullptr, { &s_fbb1c4aaf2ac7ca0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_c81faa57338bd991 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145, 217, 139,  51,  87, 170,  31, 200,
     31,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,  46, 103,
    101, 116,  65, 115, 115, 101, 109,  98,
    108, 121,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c81faa57338bd991 = b_c81faa57338bd991.words;
#if !CAPNP_LITE
static const uint16_t m_c81faa57338bd991[] = {0};
static const uint16_t i_c81faa57338bd991[] = {0};
const ::capnp::_::RawSchema s_c81faa57338bd991 = {
  0xc81faa57338bd991, b_c81faa57338bd991.words, 40, nullptr, m_c81faa57338bd991,
  0, 1, i_c81faa57338bd991, nullptr, nullptr, { &s_c81faa57338bd991, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<114> b_8634d1b4f353eefc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    252, 238,  83, 243, 180, 209,  52, 134,
     18,   0,   0,   0,   1,   0,   0,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108,  70, 105,
    101, 108, 100, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
    109,  97, 105, 110,  67, 111, 105, 108,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    218, 194,  90,  44,  74,  71,  11, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114, 105, 109,  67, 111, 105, 108,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    218, 194,  90,  44,  74,  71,  11, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 114, 111, 108,  67,
    111, 105, 108, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
      8,  32,   3,  88, 119, 138,  91, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    218, 194,  90,  44,  74,  71,  11, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8634d1b4f353eefc = b_8634d1b4f353eefc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8634d1b4f353eefc[] = {
  &s_c85b8a7758032008,
};
static const uint16_t m_8634d1b4f353eefc[] = {2, 0, 1};
static const uint16_t i_8634d1b4f353eefc[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_8634d1b4f353eefc[] = {
  { 16777216,  ::fsc::DataRef< ::fsc::MagneticField>::_capnpPrivate::brand() },
  { 16777217,  ::fsc::DataRef< ::fsc::MagneticField>::_capnpPrivate::brand() },
  { 16777218,  ::fsc::DataRef< ::fsc::MagneticField>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_8634d1b4f353eefc = {
  0x8634d1b4f353eefc, b_8634d1b4f353eefc.words, 114, d_8634d1b4f353eefc, m_8634d1b4f353eefc,
  1, 3, i_8634d1b4f353eefc, nullptr, nullptr, { &s_8634d1b4f353eefc, nullptr, bd_8634d1b4f353eefc, 0, sizeof(bd_8634d1b4f353eefc) / sizeof(bd_8634d1b4f353eefc[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_80b7584db3437cbb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    187, 124,  67, 179,  77,  88, 183, 128,
     18,   0,   0,   0,   1,   0,   0,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,  77, 101,
    115, 104,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,  21,   9,  92,  47, 115,  93, 142,
     13,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117, 114, 102,  97,  99, 101,  77,
    101, 115, 104,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_80b7584db3437cbb = b_80b7584db3437cbb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_80b7584db3437cbb[] = {
  &s_8e5d732f5c091529,
};
static const uint16_t m_80b7584db3437cbb[] = {0};
static const uint16_t i_80b7584db3437cbb[] = {0};
const ::capnp::_::RawSchema s_80b7584db3437cbb = {
  0x80b7584db3437cbb, b_80b7584db3437cbb.words, 28, d_80b7584db3437cbb, m_80b7584db3437cbb,
  1, 1, i_80b7584db3437cbb, nullptr, nullptr, { &s_80b7584db3437cbb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_8e5d732f5c091529 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41,  21,   9,  92,  47, 115,  93, 142,
     35,   0,   0,   0,   1,   0,   0,   0,
    187, 124,  67, 179,  77,  88, 183, 128,
      5,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,  77, 101,
    115, 104,  46, 115, 117, 114, 102,  97,
     99, 101,  77, 101, 115, 104,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    139,   5,  30, 162,  81, 231, 239, 249,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 100, 101, 115,   0,   0,   0,
    112, 111, 108, 121, 103, 111, 110, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  86, 101, 114, 116, 105,
     99, 101, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8e5d732f5c091529 = b_8e5d732f5c091529.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8e5d732f5c091529[] = {
  &s_80b7584db3437cbb,
  &s_f9efe751a21e058b,
};
static const uint16_t m_8e5d732f5c091529[] = {0, 2, 1};
static const uint16_t i_8e5d732f5c091529[] = {0, 1, 2};
const ::capnp::_::RawSchema s_8e5d732f5c091529 = {
  0x8e5d732f5c091529, b_8e5d732f5c091529.words, 67, d_8e5d732f5c091529, m_8e5d732f5c091529,
  2, 3, i_8e5d732f5c091529, nullptr, nullptr, { &s_8e5d732f5c091529, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<77> b_f9efe751a21e058b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139,   5,  30, 162,  81, 231, 239, 249,
     47,   0,   0,   0,   1,   0,   0,   0,
     41,  21,   9,  92,  47, 115,  93, 142,
      5,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,  77, 101,
    115, 104,  46, 115, 117, 114, 102,  97,
     99, 101,  77, 101, 115, 104,  46, 110,
    111, 100, 101, 115,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    120,  49,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  50,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  51,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f9efe751a21e058b = b_f9efe751a21e058b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f9efe751a21e058b[] = {
  &s_8e5d732f5c091529,
};
static const uint16_t m_f9efe751a21e058b[] = {0, 1, 2};
static const uint16_t i_f9efe751a21e058b[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f9efe751a21e058b = {
  0xf9efe751a21e058b, b_f9efe751a21e058b.words, 77, d_f9efe751a21e058b, m_f9efe751a21e058b,
  1, 3, i_f9efe751a21e058b, nullptr, nullptr, { &s_f9efe751a21e058b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_a496874ddbe25243 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     67,  82, 226, 219,  77, 135, 150, 164,
     18,   0,   0,   0,   1,   0,   0,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 109, 112, 111, 110,
    101, 110, 116, 115,  68,  66,  65, 115,
    115, 101, 109,  98, 108, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a496874ddbe25243 = b_a496874ddbe25243.words;
#if !CAPNP_LITE
static const uint16_t m_a496874ddbe25243[] = {0};
static const uint16_t i_a496874ddbe25243[] = {0};
const ::capnp::_::RawSchema s_a496874ddbe25243 = {
  0xa496874ddbe25243, b_a496874ddbe25243.words, 39, nullptr, m_a496874ddbe25243,
  0, 1, i_a496874ddbe25243, nullptr, nullptr, { &s_a496874ddbe25243, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_a81fa040db3aa832 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50, 168,  58, 219,  64, 160,  31, 168,
     18,   0,   0,   0,   1,   0,   0,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 111, 105, 108,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    212,   0,  45,  80, 173, 246, 150, 165,
      1,   0,   0,   0,  90,   0,   0,   0,
     80,  76,  70, 105, 108,  97, 109, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     28,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 108, 121, 108, 105, 110, 101,
     70, 105, 108,  97, 109, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212,   0,  45,  80, 173, 246, 150, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a81fa040db3aa832 = b_a81fa040db3aa832.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a81fa040db3aa832[] = {
  &s_a596f6ad502d00d4,
};
static const uint16_t m_a81fa040db3aa832[] = {0};
static const uint16_t i_a81fa040db3aa832[] = {0};
const ::capnp::_::RawSchema s_a81fa040db3aa832 = {
  0xa81fa040db3aa832, b_a81fa040db3aa832.words, 39, d_a81fa040db3aa832, m_a81fa040db3aa832,
  1, 1, i_a81fa040db3aa832, nullptr, nullptr, { &s_a81fa040db3aa832, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<77> b_a596f6ad502d00d4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    212,   0,  45,  80, 173, 246, 150, 165,
     30,   0,   0,   0,   1,   0,   0,   0,
     50, 168,  58, 219,  64, 160,  31, 168,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 111, 105, 108,  46,  80,  76,
     70, 105, 108,  97, 109, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    120,  49,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  50,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  51,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a596f6ad502d00d4 = b_a596f6ad502d00d4.words;
#if !CAPNP_LITE
static const uint16_t m_a596f6ad502d00d4[] = {0, 1, 2};
static const uint16_t i_a596f6ad502d00d4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a596f6ad502d00d4 = {
  0xa596f6ad502d00d4, b_a596f6ad502d00d4.words, 77, nullptr, m_a596f6ad502d00d4,
  0, 3, i_a596f6ad502d00d4, nullptr, nullptr, { &s_a596f6ad502d00d4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<159> b_85eea8131d600385 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    133,   3,  96,  29,  19, 168, 238, 133,
     18,   0,   0,   0,   1,   0,   1,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      8,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 111, 105, 108,  73, 110, 102,
    111,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     15, 100, 204,  50, 224,  10, 174, 158,
      1,   0,   0,   0, 106,   0,   0,   0,
     72, 105, 115, 116, 111, 114, 121,  69,
    110, 116, 114, 121,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   3,   0,   1,   0,
     24,   1,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97,  99, 104, 105, 110, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117,  97, 108, 105, 116, 121,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 117, 116, 104, 111, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  99,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116, 104, 111, 100,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109, 101, 110, 116,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_85eea8131d600385 = b_85eea8131d600385.words;
#if !CAPNP_LITE
static const uint16_t m_85eea8131d600385[] = {4, 8, 6, 5, 1, 7, 0, 3, 2};
static const uint16_t i_85eea8131d600385[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
const ::capnp::_::RawSchema s_85eea8131d600385 = {
  0x85eea8131d600385, b_85eea8131d600385.words, 159, nullptr, m_85eea8131d600385,
  0, 9, i_85eea8131d600385, nullptr, nullptr, { &s_85eea8131d600385, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_9eae0ae032cc640f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15, 100, 204,  50, 224,  10, 174, 158,
     34,   0,   0,   0,   1,   0,   1,   0,
    133,   3,  96,  29,  19, 168, 238, 133,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 111, 105, 108,  73, 110, 102,
    111,  46,  72, 105, 115, 116, 111, 114,
    121,  69, 110, 116, 114, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101,  83, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 117, 116, 104, 111, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116, 104, 111, 100,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109, 101, 110, 116,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9eae0ae032cc640f = b_9eae0ae032cc640f.words;
#if !CAPNP_LITE
static const uint16_t m_9eae0ae032cc640f[] = {1, 3, 2, 0};
static const uint16_t i_9eae0ae032cc640f[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9eae0ae032cc640f = {
  0x9eae0ae032cc640f, b_9eae0ae032cc640f.words, 81, nullptr, m_9eae0ae032cc640f,
  0, 4, i_9eae0ae032cc640f, nullptr, nullptr, { &s_9eae0ae032cc640f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_bb7eca92b0934809 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9,  72, 147, 176, 146, 202, 126, 187,
     18,   0,   0,   0,   1,   0,   1,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 111, 110, 102, 105, 103,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 105, 108, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 114, 114, 101, 110, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99,  97, 108, 101,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bb7eca92b0934809 = b_bb7eca92b0934809.words;
#if !CAPNP_LITE
static const uint16_t m_bb7eca92b0934809[] = {0, 1, 2};
static const uint16_t i_bb7eca92b0934809[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bb7eca92b0934809 = {
  0xbb7eca92b0934809, b_bb7eca92b0934809.words, 72, nullptr, m_bb7eca92b0934809,
  0, 3, i_bb7eca92b0934809, nullptr, nullptr, { &s_bb7eca92b0934809, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_860c9f733ca13c32 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50,  60, 161,  60, 115, 159,  12, 134,
     18,   0,   0,   0,   3,   0,   0,   0,
    172,  27, 119, 205,  18, 139, 179, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 135,   0,   0,   0,
    113,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 108, 105, 101, 110, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,  17,  93, 209,  36,  85,  34, 250,
    205, 124,  57, 157, 244, 152, 170, 191,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    254,  63,  67, 173, 202, 221, 100, 212,
    232, 194,  71, 216, 213, 208,  66, 156,
     25,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  67, 111, 105, 108,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  67, 111, 110, 102, 105,
    103,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_860c9f733ca13c32 = b_860c9f733ca13c32.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_860c9f733ca13c32[] = {
  &s_9c42d0d5d847c2e8,
  &s_bfaa98f49d397ccd,
  &s_d464ddcaad433ffe,
  &s_fa225524d15d1105,
};
static const uint16_t m_860c9f733ca13c32[] = {0, 1};
const ::capnp::_::RawSchema s_860c9f733ca13c32 = {
  0x860c9f733ca13c32, b_860c9f733ca13c32.words, 40, d_860c9f733ca13c32, m_860c9f733ca13c32,
  4, 2, nullptr, nullptr, nullptr, { &s_860c9f733ca13c32, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_fa225524d15d1105 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5,  17,  93, 209,  36,  85,  34, 250,
     32,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 108, 105, 101, 110, 116,  46,
    103, 101, 116,  67, 111, 105, 108,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fa225524d15d1105 = b_fa225524d15d1105.words;
#if !CAPNP_LITE
static const uint16_t m_fa225524d15d1105[] = {0};
static const uint16_t i_fa225524d15d1105[] = {0};
const ::capnp::_::RawSchema s_fa225524d15d1105 = {
  0xfa225524d15d1105, b_fa225524d15d1105.words, 34, nullptr, m_fa225524d15d1105,
  0, 1, i_fa225524d15d1105, nullptr, nullptr, { &s_fa225524d15d1105, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_bfaa98f49d397ccd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    205, 124,  57, 157, 244, 152, 170, 191,
     32,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 108, 105, 101, 110, 116,  46,
    103, 101, 116,  67, 111, 105, 108,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 105, 108,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 168,  58, 219,  64, 160,  31, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    133,   3,  96,  29,  19, 168, 238, 133,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bfaa98f49d397ccd = b_bfaa98f49d397ccd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bfaa98f49d397ccd[] = {
  &s_85eea8131d600385,
  &s_a81fa040db3aa832,
};
static const uint16_t m_bfaa98f49d397ccd[] = {0, 1};
static const uint16_t i_bfaa98f49d397ccd[] = {0, 1};
const ::capnp::_::RawSchema s_bfaa98f49d397ccd = {
  0xbfaa98f49d397ccd, b_bfaa98f49d397ccd.words, 49, d_bfaa98f49d397ccd, m_bfaa98f49d397ccd,
  2, 2, i_bfaa98f49d397ccd, nullptr, nullptr, { &s_bfaa98f49d397ccd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_d464ddcaad433ffe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    254,  63,  67, 173, 202, 221, 100, 212,
     32,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 108, 105, 101, 110, 116,  46,
    103, 101, 116,  67, 111, 110, 102, 105,
    103,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d464ddcaad433ffe = b_d464ddcaad433ffe.words;
#if !CAPNP_LITE
static const uint16_t m_d464ddcaad433ffe[] = {0};
static const uint16_t i_d464ddcaad433ffe[] = {0};
const ::capnp::_::RawSchema s_d464ddcaad433ffe = {
  0xd464ddcaad433ffe, b_d464ddcaad433ffe.words, 35, nullptr, m_d464ddcaad433ffe,
  0, 1, i_d464ddcaad433ffe, nullptr, nullptr, { &s_d464ddcaad433ffe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_9c42d0d5d847c2e8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 194,  71, 216, 213, 208,  66, 156,
     32,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 118, 105,  99, 101, 115,  47,
    119,  55, 120,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 105, 108, 115,  68,
     66,  67, 108, 105, 101, 110, 116,  46,
    103, 101, 116,  67, 111, 110, 102, 105,
    103,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 102, 105, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9,  72, 147, 176, 146, 202, 126, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c42d0d5d847c2e8 = b_9c42d0d5d847c2e8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c42d0d5d847c2e8[] = {
  &s_bb7eca92b0934809,
};
static const uint16_t m_9c42d0d5d847c2e8[] = {0};
static const uint16_t i_9c42d0d5d847c2e8[] = {0};
const ::capnp::_::RawSchema s_9c42d0d5d847c2e8 = {
  0x9c42d0d5d847c2e8, b_9c42d0d5d847c2e8.words, 35, d_9c42d0d5d847c2e8, m_9c42d0d5d847c2e8,
  1, 1, i_9c42d0d5d847c2e8, nullptr, nullptr, { &s_9c42d0d5d847c2e8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace fsc {
namespace devices {
namespace w7x {

#if !CAPNP_LITE
::capnp::Request< ::fsc::devices::w7x::CoilsDB::GetCoilParams,  ::fsc::Filament>
CoilsDB::Client::getCoilRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::devices::w7x::CoilsDB::GetCoilParams,  ::fsc::Filament>(
      0xa6b69fa894c1e586ull, 0, sizeHint);
}
::kj::Promise<void> CoilsDB::Server::getCoil(GetCoilContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "devices/w7x.capnp:CoilsDB", "getCoil",
      0xa6b69fa894c1e586ull, 0);
}
::capnp::Request< ::fsc::devices::w7x::CoilsDB::GetConfigParams,  ::fsc::devices::w7x::CoilsDBConfig>
CoilsDB::Client::getConfigRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::devices::w7x::CoilsDB::GetConfigParams,  ::fsc::devices::w7x::CoilsDBConfig>(
      0xa6b69fa894c1e586ull, 1, sizeHint);
}
::kj::Promise<void> CoilsDB::Server::getConfig(GetConfigContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "devices/w7x.capnp:CoilsDB", "getConfig",
      0xa6b69fa894c1e586ull, 1);
}
::capnp::Capability::Server::DispatchCallResult CoilsDB::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xa6b69fa894c1e586ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("devices/w7x.capnp:CoilsDB", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult CoilsDB::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        getCoil(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::devices::w7x::CoilsDB::GetCoilParams,  ::fsc::Filament>(context)),
        false
      };
    case 1:
      return {
        getConfig(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::devices::w7x::CoilsDB::GetConfigParams,  ::fsc::devices::w7x::CoilsDBConfig>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "devices/w7x.capnp:CoilsDB",
          0xa6b69fa894c1e586ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// CoilsDB
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDB::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDB::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDB::GetCoilParams
constexpr uint16_t CoilsDB::GetCoilParams::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDB::GetCoilParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDB::GetCoilParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDB::GetCoilParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDB::GetConfigParams
constexpr uint16_t CoilsDB::GetConfigParams::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDB::GetConfigParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDB::GetConfigParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDB::GetConfigParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::fsc::devices::w7x::ComponentsDB::GetMeshParams,  ::fsc::Mesh>
ComponentsDB::Client::getMeshRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::devices::w7x::ComponentsDB::GetMeshParams,  ::fsc::Mesh>(
      0xae803183c9457ee7ull, 0, sizeHint);
}
::kj::Promise<void> ComponentsDB::Server::getMesh(GetMeshContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "devices/w7x.capnp:ComponentsDB", "getMesh",
      0xae803183c9457ee7ull, 0);
}
::capnp::Request< ::fsc::devices::w7x::ComponentsDB::GetAssemblyParams,  ::fsc::devices::w7x::ComponentsDB::GetAssemblyResults>
ComponentsDB::Client::getAssemblyRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::devices::w7x::ComponentsDB::GetAssemblyParams,  ::fsc::devices::w7x::ComponentsDB::GetAssemblyResults>(
      0xae803183c9457ee7ull, 1, sizeHint);
}
::kj::Promise<void> ComponentsDB::Server::getAssembly(GetAssemblyContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "devices/w7x.capnp:ComponentsDB", "getAssembly",
      0xae803183c9457ee7ull, 1);
}
::capnp::Capability::Server::DispatchCallResult ComponentsDB::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xae803183c9457ee7ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("devices/w7x.capnp:ComponentsDB", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult ComponentsDB::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        getMesh(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::devices::w7x::ComponentsDB::GetMeshParams,  ::fsc::Mesh>(context)),
        false
      };
    case 1:
      return {
        getAssembly(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::devices::w7x::ComponentsDB::GetAssemblyParams,  ::fsc::devices::w7x::ComponentsDB::GetAssemblyResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "devices/w7x.capnp:ComponentsDB",
          0xae803183c9457ee7ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// ComponentsDB
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDB::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDB::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ComponentsDB::GetMeshParams
constexpr uint16_t ComponentsDB::GetMeshParams::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentsDB::GetMeshParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDB::GetMeshParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDB::GetMeshParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ComponentsDB::GetAssemblyParams
constexpr uint16_t ComponentsDB::GetAssemblyParams::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentsDB::GetAssemblyParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDB::GetAssemblyParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDB::GetAssemblyParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ComponentsDB::GetAssemblyResults
constexpr uint16_t ComponentsDB::GetAssemblyResults::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentsDB::GetAssemblyResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDB::GetAssemblyResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDB::GetAssemblyResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilFields
constexpr uint16_t CoilFields::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilFields::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilFields::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilFields::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ComponentsDBMesh
constexpr uint16_t ComponentsDBMesh::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentsDBMesh::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDBMesh::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDBMesh::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ComponentsDBMesh::SurfaceMesh
constexpr uint16_t ComponentsDBMesh::SurfaceMesh::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentsDBMesh::SurfaceMesh::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDBMesh::SurfaceMesh::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDBMesh::SurfaceMesh::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ComponentsDBMesh::SurfaceMesh::Nodes
constexpr uint16_t ComponentsDBMesh::SurfaceMesh::Nodes::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentsDBMesh::SurfaceMesh::Nodes::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDBMesh::SurfaceMesh::Nodes::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDBMesh::SurfaceMesh::Nodes::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ComponentsDBAssembly
constexpr uint16_t ComponentsDBAssembly::_capnpPrivate::dataWordSize;
constexpr uint16_t ComponentsDBAssembly::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ComponentsDBAssembly::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComponentsDBAssembly::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBCoil
constexpr uint16_t CoilsDBCoil::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBCoil::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBCoil::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBCoil::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBCoil::PLFilament
constexpr uint16_t CoilsDBCoil::PLFilament::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBCoil::PLFilament::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBCoil::PLFilament::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBCoil::PLFilament::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBCoilInfo
constexpr uint16_t CoilsDBCoilInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBCoilInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBCoilInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBCoilInfo::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBCoilInfo::HistoryEntry
constexpr uint16_t CoilsDBCoilInfo::HistoryEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBCoilInfo::HistoryEntry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBCoilInfo::HistoryEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBCoilInfo::HistoryEntry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBConfig
constexpr uint16_t CoilsDBConfig::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBConfig::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBConfig::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBConfig::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::fsc::devices::w7x::CoilsDBClient::GetCoilParams,  ::fsc::devices::w7x::CoilsDBClient::GetCoilResults>
CoilsDBClient::Client::getCoilRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::devices::w7x::CoilsDBClient::GetCoilParams,  ::fsc::devices::w7x::CoilsDBClient::GetCoilResults>(
      0x860c9f733ca13c32ull, 0, sizeHint);
}
::kj::Promise<void> CoilsDBClient::Server::getCoil(GetCoilContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "devices/w7x.capnp:CoilsDBClient", "getCoil",
      0x860c9f733ca13c32ull, 0);
}
::capnp::Request< ::fsc::devices::w7x::CoilsDBClient::GetConfigParams,  ::fsc::devices::w7x::CoilsDBClient::GetConfigResults>
CoilsDBClient::Client::getConfigRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::fsc::devices::w7x::CoilsDBClient::GetConfigParams,  ::fsc::devices::w7x::CoilsDBClient::GetConfigResults>(
      0x860c9f733ca13c32ull, 1, sizeHint);
}
::kj::Promise<void> CoilsDBClient::Server::getConfig(GetConfigContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "devices/w7x.capnp:CoilsDBClient", "getConfig",
      0x860c9f733ca13c32ull, 1);
}
::capnp::Capability::Server::DispatchCallResult CoilsDBClient::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0x860c9f733ca13c32ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("devices/w7x.capnp:CoilsDBClient", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult CoilsDBClient::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        getCoil(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::devices::w7x::CoilsDBClient::GetCoilParams,  ::fsc::devices::w7x::CoilsDBClient::GetCoilResults>(context)),
        false
      };
    case 1:
      return {
        getConfig(::capnp::Capability::Server::internalGetTypedContext<
             ::fsc::devices::w7x::CoilsDBClient::GetConfigParams,  ::fsc::devices::w7x::CoilsDBClient::GetConfigResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "devices/w7x.capnp:CoilsDBClient",
          0x860c9f733ca13c32ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// CoilsDBClient
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBClient::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBClient::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBClient::GetCoilParams
constexpr uint16_t CoilsDBClient::GetCoilParams::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBClient::GetCoilParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBClient::GetCoilParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBClient::GetCoilParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBClient::GetCoilResults
constexpr uint16_t CoilsDBClient::GetCoilResults::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBClient::GetCoilResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBClient::GetCoilResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBClient::GetCoilResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBClient::GetConfigParams
constexpr uint16_t CoilsDBClient::GetConfigParams::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBClient::GetConfigParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBClient::GetConfigParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBClient::GetConfigParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CoilsDBClient::GetConfigResults
constexpr uint16_t CoilsDBClient::GetConfigResults::_capnpPrivate::dataWordSize;
constexpr uint16_t CoilsDBClient::GetConfigResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CoilsDBClient::GetConfigResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CoilsDBClient::GetConfigResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

