// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: offline.capnp

#include "offline.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<113> b_ea7492bff4b220ab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171,  32, 178, 244, 191, 146, 116, 234,
     14,   0,   0,   0,   1,   0,   0,   0,
    206, 156, 173, 132,  31,  59,  52, 193,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  71,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 108, 105, 110, 101,  46,
     99,  97, 112, 110, 112,  58,  79, 102,
    102, 108, 105, 110, 101,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   1,   0,   1,   0,
    206, 123, 185, 228, 234, 125, 163, 148,
     25,   0,   0,   0,  66,   0,   0,   0,
    174, 238, 143, 191, 200, 255,  89, 130,
     21,   0,   0,   0,  82,   0,   0,   0,
     95, 122, 143, 142,  56, 130, 182, 176,
     21,   0,   0,   0, 106,   0,   0,   0,
    191, 137,   4,  58, 115, 208, 213, 233,
     21,   0,   0,   0,  98,   0,   0,   0,
     87,  55,  88,  67, 111, 105, 108,   0,
     87,  55,  88,  67, 111, 110, 102, 105,
    103,   0,   0,   0,   0,   0,   0,   0,
     87,  55,  88,  67, 111, 109, 112, 111,
    110, 101, 110, 116,   0,   0,   0,   0,
     87,  55,  88,  65, 115, 115, 101, 109,
     98, 108, 121,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
    119,  55, 120,  67, 111, 105, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    206, 123, 185, 228, 234, 125, 163, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,  55, 120,  67, 111, 110, 102, 105,
    103, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    174, 238, 143, 191, 200, 255,  89, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,  55, 120,  67, 111, 109, 112, 111,
    110, 101, 110, 116, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     95, 122, 143, 142,  56, 130, 182, 176,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,  55, 120,  65, 115, 115, 101, 109,
     98, 108, 105, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    191, 137,   4,  58, 115, 208, 213, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea7492bff4b220ab = b_ea7492bff4b220ab.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ea7492bff4b220ab[] = {
  &s_8259ffc8bf8feeae,
  &s_94a37deae4b97bce,
  &s_b0b682388e8f7a5f,
  &s_e9d5d0733a0489bf,
};
static const uint16_t m_ea7492bff4b220ab[] = {3, 0, 2, 1};
static const uint16_t i_ea7492bff4b220ab[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_ea7492bff4b220ab = {
  0xea7492bff4b220ab, b_ea7492bff4b220ab.words, 113, d_ea7492bff4b220ab, m_ea7492bff4b220ab,
  4, 4, i_ea7492bff4b220ab, nullptr, nullptr, { &s_ea7492bff4b220ab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_94a37deae4b97bce = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    206, 123, 185, 228, 234, 125, 163, 148,
     26,   0,   0,   0,   1,   0,   1,   0,
    171,  32, 178, 244, 191, 146, 116, 234,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 108, 105, 110, 101,  46,
     99,  97, 112, 110, 112,  58,  79, 102,
    102, 108, 105, 110, 101,  68,  97, 116,
     97,  46,  87,  55,  88,  67, 111, 105,
    108,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108,  97, 109, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     17, 228,  27, 168,  36, 128,  49, 251,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94a37deae4b97bce = b_94a37deae4b97bce.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_94a37deae4b97bce[] = {
  &s_fb318024a81be411,
};
static const uint16_t m_94a37deae4b97bce[] = {1, 0};
static const uint16_t i_94a37deae4b97bce[] = {0, 1};
const ::capnp::_::RawSchema s_94a37deae4b97bce = {
  0x94a37deae4b97bce, b_94a37deae4b97bce.words, 50, d_94a37deae4b97bce, m_94a37deae4b97bce,
  1, 2, i_94a37deae4b97bce, nullptr, nullptr, { &s_94a37deae4b97bce, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_8259ffc8bf8feeae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174, 238, 143, 191, 200, 255,  89, 130,
     26,   0,   0,   0,   1,   0,   1,   0,
    171,  32, 178, 244, 191, 146, 116, 234,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 108, 105, 110, 101,  46,
     99,  97, 112, 110, 112,  58,  79, 102,
    102, 108, 105, 110, 101,  68,  97, 116,
     97,  46,  87,  55,  88,  67, 111, 110,
    102, 105, 103,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9,  72, 147, 176, 146, 202, 126, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8259ffc8bf8feeae = b_8259ffc8bf8feeae.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8259ffc8bf8feeae[] = {
  &s_bb7eca92b0934809,
};
static const uint16_t m_8259ffc8bf8feeae[] = {1, 0};
static const uint16_t i_8259ffc8bf8feeae[] = {0, 1};
const ::capnp::_::RawSchema s_8259ffc8bf8feeae = {
  0x8259ffc8bf8feeae, b_8259ffc8bf8feeae.words, 49, d_8259ffc8bf8feeae, m_8259ffc8bf8feeae,
  1, 2, i_8259ffc8bf8feeae, nullptr, nullptr, { &s_8259ffc8bf8feeae, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_b0b682388e8f7a5f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     95, 122, 143, 142,  56, 130, 182, 176,
     26,   0,   0,   0,   1,   0,   1,   0,
    171,  32, 178, 244, 191, 146, 116, 234,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 108, 105, 110, 101,  46,
     99,  97, 112, 110, 112,  58,  79, 102,
    102, 108, 105, 110, 101,  68,  97, 116,
     97,  46,  87,  55,  88,  67, 111, 109,
    112, 111, 110, 101, 110, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    140,  16, 186, 227, 218, 162,  52, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b0b682388e8f7a5f = b_b0b682388e8f7a5f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b0b682388e8f7a5f[] = {
  &s_ba34a2dae3ba108c,
};
static const uint16_t m_b0b682388e8f7a5f[] = {1, 0};
static const uint16_t i_b0b682388e8f7a5f[] = {0, 1};
const ::capnp::_::RawSchema s_b0b682388e8f7a5f = {
  0xb0b682388e8f7a5f, b_b0b682388e8f7a5f.words, 50, d_b0b682388e8f7a5f, m_b0b682388e8f7a5f,
  1, 2, i_b0b682388e8f7a5f, nullptr, nullptr, { &s_b0b682388e8f7a5f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_e9d5d0733a0489bf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    191, 137,   4,  58, 115, 208, 213, 233,
     26,   0,   0,   0,   1,   0,   1,   0,
    171,  32, 178, 244, 191, 146, 116, 234,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 108, 105, 110, 101,  46,
     99,  97, 112, 110, 112,  58,  79, 102,
    102, 108, 105, 110, 101,  68,  97, 116,
     97,  46,  87,  55,  88,  65, 115, 115,
    101, 109,  98, 108, 121,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 115, 115, 101, 109,  98, 108, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e9d5d0733a0489bf = b_e9d5d0733a0489bf.words;
#if !CAPNP_LITE
static const uint16_t m_e9d5d0733a0489bf[] = {1, 0};
static const uint16_t i_e9d5d0733a0489bf[] = {0, 1};
const ::capnp::_::RawSchema s_e9d5d0733a0489bf = {
  0xe9d5d0733a0489bf, b_e9d5d0733a0489bf.words, 54, nullptr, m_e9d5d0733a0489bf,
  0, 2, i_e9d5d0733a0489bf, nullptr, nullptr, { &s_e9d5d0733a0489bf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace fsc {

// OfflineData
constexpr uint16_t OfflineData::_capnpPrivate::dataWordSize;
constexpr uint16_t OfflineData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OfflineData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OfflineData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OfflineData::W7XCoil
constexpr uint16_t OfflineData::W7XCoil::_capnpPrivate::dataWordSize;
constexpr uint16_t OfflineData::W7XCoil::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OfflineData::W7XCoil::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OfflineData::W7XCoil::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OfflineData::W7XConfig
constexpr uint16_t OfflineData::W7XConfig::_capnpPrivate::dataWordSize;
constexpr uint16_t OfflineData::W7XConfig::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OfflineData::W7XConfig::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OfflineData::W7XConfig::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OfflineData::W7XComponent
constexpr uint16_t OfflineData::W7XComponent::_capnpPrivate::dataWordSize;
constexpr uint16_t OfflineData::W7XComponent::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OfflineData::W7XComponent::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OfflineData::W7XComponent::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OfflineData::W7XAssembly
constexpr uint16_t OfflineData::W7XAssembly::_capnpPrivate::dataWordSize;
constexpr uint16_t OfflineData::W7XAssembly::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OfflineData::W7XAssembly::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OfflineData::W7XAssembly::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

