// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: offline.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 9001
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include "devices/w7x.capnp.h"
#include "geometry.capnp.h"
#include "magnetics.capnp.h"

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(ea7492bff4b220ab);
CAPNP_DECLARE_SCHEMA(94a37deae4b97bce);
CAPNP_DECLARE_SCHEMA(8259ffc8bf8feeae);
CAPNP_DECLARE_SCHEMA(b0b682388e8f7a5f);
CAPNP_DECLARE_SCHEMA(e9d5d0733a0489bf);

}  // namespace schemas
}  // namespace capnp

namespace fsc {

struct OfflineData {
  OfflineData() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  struct W7XCoil;
  struct W7XConfig;
  struct W7XComponent;
  struct W7XAssembly;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(ea7492bff4b220ab, 0, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct OfflineData::W7XCoil {
  W7XCoil() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(94a37deae4b97bce, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct OfflineData::W7XConfig {
  W7XConfig() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8259ffc8bf8feeae, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct OfflineData::W7XComponent {
  W7XComponent() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(b0b682388e8f7a5f, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct OfflineData::W7XAssembly {
  W7XAssembly() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e9d5d0733a0489bf, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class OfflineData::Reader {
public:
  typedef OfflineData Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasW7xCoils() const;
  inline  ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Reader getW7xCoils() const;

  inline bool hasW7xConfigs() const;
  inline  ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Reader getW7xConfigs() const;

  inline bool hasW7xComponents() const;
  inline  ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Reader getW7xComponents() const;

  inline bool hasW7xAssemblies() const;
  inline  ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Reader getW7xAssemblies() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class OfflineData::Builder {
public:
  typedef OfflineData Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasW7xCoils();
  inline  ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Builder getW7xCoils();
  inline void setW7xCoils( ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Builder initW7xCoils(unsigned int size);
  inline void adoptW7xCoils(::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>> disownW7xCoils();

  inline bool hasW7xConfigs();
  inline  ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Builder getW7xConfigs();
  inline void setW7xConfigs( ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Builder initW7xConfigs(unsigned int size);
  inline void adoptW7xConfigs(::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>> disownW7xConfigs();

  inline bool hasW7xComponents();
  inline  ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Builder getW7xComponents();
  inline void setW7xComponents( ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Builder initW7xComponents(unsigned int size);
  inline void adoptW7xComponents(::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>> disownW7xComponents();

  inline bool hasW7xAssemblies();
  inline  ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Builder getW7xAssemblies();
  inline void setW7xAssemblies( ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Builder initW7xAssemblies(unsigned int size);
  inline void adoptW7xAssemblies(::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>> disownW7xAssemblies();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class OfflineData::Pipeline {
public:
  typedef OfflineData Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class OfflineData::W7XCoil::Reader {
public:
  typedef W7XCoil Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId() const;

  inline bool hasFilament() const;
  inline  ::fsc::Filament::Reader getFilament() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class OfflineData::W7XCoil::Builder {
public:
  typedef W7XCoil Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId();
  inline void setId( ::uint64_t value);

  inline bool hasFilament();
  inline  ::fsc::Filament::Builder getFilament();
  inline void setFilament( ::fsc::Filament::Reader value);
  inline  ::fsc::Filament::Builder initFilament();
  inline void adoptFilament(::capnp::Orphan< ::fsc::Filament>&& value);
  inline ::capnp::Orphan< ::fsc::Filament> disownFilament();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class OfflineData::W7XCoil::Pipeline {
public:
  typedef W7XCoil Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::fsc::Filament::Pipeline getFilament();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class OfflineData::W7XConfig::Reader {
public:
  typedef W7XConfig Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId() const;

  inline bool hasConfig() const;
  inline  ::fsc::devices::w7x::CoilsDBConfig::Reader getConfig() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class OfflineData::W7XConfig::Builder {
public:
  typedef W7XConfig Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId();
  inline void setId( ::uint64_t value);

  inline bool hasConfig();
  inline  ::fsc::devices::w7x::CoilsDBConfig::Builder getConfig();
  inline void setConfig( ::fsc::devices::w7x::CoilsDBConfig::Reader value);
  inline  ::fsc::devices::w7x::CoilsDBConfig::Builder initConfig();
  inline void adoptConfig(::capnp::Orphan< ::fsc::devices::w7x::CoilsDBConfig>&& value);
  inline ::capnp::Orphan< ::fsc::devices::w7x::CoilsDBConfig> disownConfig();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class OfflineData::W7XConfig::Pipeline {
public:
  typedef W7XConfig Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::fsc::devices::w7x::CoilsDBConfig::Pipeline getConfig();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class OfflineData::W7XComponent::Reader {
public:
  typedef W7XComponent Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId() const;

  inline bool hasComponent() const;
  inline  ::fsc::Mesh::Reader getComponent() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class OfflineData::W7XComponent::Builder {
public:
  typedef W7XComponent Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId();
  inline void setId( ::uint64_t value);

  inline bool hasComponent();
  inline  ::fsc::Mesh::Builder getComponent();
  inline void setComponent( ::fsc::Mesh::Reader value);
  inline  ::fsc::Mesh::Builder initComponent();
  inline void adoptComponent(::capnp::Orphan< ::fsc::Mesh>&& value);
  inline ::capnp::Orphan< ::fsc::Mesh> disownComponent();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class OfflineData::W7XComponent::Pipeline {
public:
  typedef W7XComponent Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::fsc::Mesh::Pipeline getComponent();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class OfflineData::W7XAssembly::Reader {
public:
  typedef W7XAssembly Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId() const;

  inline bool hasAssembly() const;
  inline  ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Reader getAssembly() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class OfflineData::W7XAssembly::Builder {
public:
  typedef W7XAssembly Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getId();
  inline void setId( ::uint64_t value);

  inline bool hasAssembly();
  inline  ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Builder getAssembly();
  inline void setAssembly( ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Reader value);
  inline void setAssembly(::kj::ArrayPtr<const  ::uint64_t> value);
  inline  ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Builder initAssembly(unsigned int size);
  inline void adoptAssembly(::capnp::Orphan< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>> disownAssembly();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class OfflineData::W7XAssembly::Pipeline {
public:
  typedef W7XAssembly Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool OfflineData::Reader::hasW7xCoils() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::Builder::hasW7xCoils() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Reader OfflineData::Reader::getW7xCoils() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::getW7xCoils() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void OfflineData::Builder::setW7xCoils( ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::initW7xCoils(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void OfflineData::Builder::adoptW7xCoils(
    ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>> OfflineData::Builder::disownW7xCoils() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XCoil,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool OfflineData::Reader::hasW7xConfigs() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::Builder::hasW7xConfigs() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Reader OfflineData::Reader::getW7xConfigs() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::getW7xConfigs() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void OfflineData::Builder::setW7xConfigs( ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::initW7xConfigs(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void OfflineData::Builder::adoptW7xConfigs(
    ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>> OfflineData::Builder::disownW7xConfigs() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XConfig,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool OfflineData::Reader::hasW7xComponents() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::Builder::hasW7xComponents() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Reader OfflineData::Reader::getW7xComponents() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::getW7xComponents() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void OfflineData::Builder::setW7xComponents( ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::initW7xComponents(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void OfflineData::Builder::adoptW7xComponents(
    ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>> OfflineData::Builder::disownW7xComponents() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XComponent,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool OfflineData::Reader::hasW7xAssemblies() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::Builder::hasW7xAssemblies() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Reader OfflineData::Reader::getW7xAssemblies() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::getW7xAssemblies() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void OfflineData::Builder::setW7xAssemblies( ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>::Builder OfflineData::Builder::initW7xAssemblies(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void OfflineData::Builder::adoptW7xAssemblies(
    ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>> OfflineData::Builder::disownW7xAssemblies() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::fsc::OfflineData::W7XAssembly,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline  ::uint64_t OfflineData::W7XCoil::Reader::getId() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t OfflineData::W7XCoil::Builder::getId() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void OfflineData::W7XCoil::Builder::setId( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool OfflineData::W7XCoil::Reader::hasFilament() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::W7XCoil::Builder::hasFilament() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::fsc::Filament::Reader OfflineData::W7XCoil::Reader::getFilament() const {
  return ::capnp::_::PointerHelpers< ::fsc::Filament>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::fsc::Filament::Builder OfflineData::W7XCoil::Builder::getFilament() {
  return ::capnp::_::PointerHelpers< ::fsc::Filament>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::fsc::Filament::Pipeline OfflineData::W7XCoil::Pipeline::getFilament() {
  return  ::fsc::Filament::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void OfflineData::W7XCoil::Builder::setFilament( ::fsc::Filament::Reader value) {
  ::capnp::_::PointerHelpers< ::fsc::Filament>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::fsc::Filament::Builder OfflineData::W7XCoil::Builder::initFilament() {
  return ::capnp::_::PointerHelpers< ::fsc::Filament>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void OfflineData::W7XCoil::Builder::adoptFilament(
    ::capnp::Orphan< ::fsc::Filament>&& value) {
  ::capnp::_::PointerHelpers< ::fsc::Filament>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::fsc::Filament> OfflineData::W7XCoil::Builder::disownFilament() {
  return ::capnp::_::PointerHelpers< ::fsc::Filament>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint64_t OfflineData::W7XConfig::Reader::getId() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t OfflineData::W7XConfig::Builder::getId() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void OfflineData::W7XConfig::Builder::setId( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool OfflineData::W7XConfig::Reader::hasConfig() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::W7XConfig::Builder::hasConfig() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::fsc::devices::w7x::CoilsDBConfig::Reader OfflineData::W7XConfig::Reader::getConfig() const {
  return ::capnp::_::PointerHelpers< ::fsc::devices::w7x::CoilsDBConfig>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::fsc::devices::w7x::CoilsDBConfig::Builder OfflineData::W7XConfig::Builder::getConfig() {
  return ::capnp::_::PointerHelpers< ::fsc::devices::w7x::CoilsDBConfig>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::fsc::devices::w7x::CoilsDBConfig::Pipeline OfflineData::W7XConfig::Pipeline::getConfig() {
  return  ::fsc::devices::w7x::CoilsDBConfig::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void OfflineData::W7XConfig::Builder::setConfig( ::fsc::devices::w7x::CoilsDBConfig::Reader value) {
  ::capnp::_::PointerHelpers< ::fsc::devices::w7x::CoilsDBConfig>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::fsc::devices::w7x::CoilsDBConfig::Builder OfflineData::W7XConfig::Builder::initConfig() {
  return ::capnp::_::PointerHelpers< ::fsc::devices::w7x::CoilsDBConfig>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void OfflineData::W7XConfig::Builder::adoptConfig(
    ::capnp::Orphan< ::fsc::devices::w7x::CoilsDBConfig>&& value) {
  ::capnp::_::PointerHelpers< ::fsc::devices::w7x::CoilsDBConfig>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::fsc::devices::w7x::CoilsDBConfig> OfflineData::W7XConfig::Builder::disownConfig() {
  return ::capnp::_::PointerHelpers< ::fsc::devices::w7x::CoilsDBConfig>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint64_t OfflineData::W7XComponent::Reader::getId() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t OfflineData::W7XComponent::Builder::getId() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void OfflineData::W7XComponent::Builder::setId( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool OfflineData::W7XComponent::Reader::hasComponent() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::W7XComponent::Builder::hasComponent() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::fsc::Mesh::Reader OfflineData::W7XComponent::Reader::getComponent() const {
  return ::capnp::_::PointerHelpers< ::fsc::Mesh>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::fsc::Mesh::Builder OfflineData::W7XComponent::Builder::getComponent() {
  return ::capnp::_::PointerHelpers< ::fsc::Mesh>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::fsc::Mesh::Pipeline OfflineData::W7XComponent::Pipeline::getComponent() {
  return  ::fsc::Mesh::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void OfflineData::W7XComponent::Builder::setComponent( ::fsc::Mesh::Reader value) {
  ::capnp::_::PointerHelpers< ::fsc::Mesh>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::fsc::Mesh::Builder OfflineData::W7XComponent::Builder::initComponent() {
  return ::capnp::_::PointerHelpers< ::fsc::Mesh>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void OfflineData::W7XComponent::Builder::adoptComponent(
    ::capnp::Orphan< ::fsc::Mesh>&& value) {
  ::capnp::_::PointerHelpers< ::fsc::Mesh>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::fsc::Mesh> OfflineData::W7XComponent::Builder::disownComponent() {
  return ::capnp::_::PointerHelpers< ::fsc::Mesh>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint64_t OfflineData::W7XAssembly::Reader::getId() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t OfflineData::W7XAssembly::Builder::getId() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void OfflineData::W7XAssembly::Builder::setId( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool OfflineData::W7XAssembly::Reader::hasAssembly() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool OfflineData::W7XAssembly::Builder::hasAssembly() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Reader OfflineData::W7XAssembly::Reader::getAssembly() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Builder OfflineData::W7XAssembly::Builder::getAssembly() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void OfflineData::W7XAssembly::Builder::setAssembly( ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline void OfflineData::W7XAssembly::Builder::setAssembly(::kj::ArrayPtr<const  ::uint64_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>::Builder OfflineData::W7XAssembly::Builder::initAssembly(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void OfflineData::W7XAssembly::Builder::adoptAssembly(
    ::capnp::Orphan< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>> OfflineData::W7XAssembly::Builder::disownAssembly() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::uint64_t,  ::capnp::Kind::PRIMITIVE>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

}  // namespace

CAPNP_END_HEADER

