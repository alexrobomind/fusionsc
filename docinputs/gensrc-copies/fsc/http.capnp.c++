// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: http.capnp

#include "http.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<39> b_87963d5b1c3d2002 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      2,  32,  61,  28,  91,  61, 150, 135,
     11,   0,   0,   0,   1,   0,   0,   0,
    153, 234, 220, 101,  80,  99,  79, 221,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 116, 116, 112,  46,  99,  97, 112,
    110, 112,  58,  72, 116, 116, 112,  82,
    111, 111, 116,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     23, 208,  23, 227, 225, 140, 130, 135,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     23, 208,  23, 227, 225, 140, 130, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87963d5b1c3d2002 = b_87963d5b1c3d2002.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_87963d5b1c3d2002[] = {
  &s_87828ce1e317d017,
};
static const uint16_t m_87963d5b1c3d2002[] = {0};
static const uint16_t i_87963d5b1c3d2002[] = {0};
const ::capnp::_::RawSchema s_87963d5b1c3d2002 = {
  0x87963d5b1c3d2002, b_87963d5b1c3d2002.words, 39, d_87963d5b1c3d2002, m_87963d5b1c3d2002,
  1, 1, i_87963d5b1c3d2002, nullptr, nullptr, { &s_87963d5b1c3d2002, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_87828ce1e317d017 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23, 208,  23, 227, 225, 140, 130, 135,
     20,   0,   0,   0,   1,   0,   1,   0,
      2,  32,  61,  28,  91,  61, 150, 135,
      2,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 116, 116, 112,  46,  99,  97, 112,
    110, 112,  58,  72, 116, 116, 112,  82,
    111, 111, 116,  46,  69, 110, 116, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    108, 111,  99,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87828ce1e317d017 = b_87828ce1e317d017.words;
#if !CAPNP_LITE
static const uint16_t m_87828ce1e317d017[] = {2, 0, 1};
static const uint16_t i_87828ce1e317d017[] = {1, 2, 0};
const ::capnp::_::RawSchema s_87828ce1e317d017 = {
  0x87828ce1e317d017, b_87828ce1e317d017.words, 63, nullptr, m_87828ce1e317d017,
  0, 3, i_87828ce1e317d017, nullptr, nullptr, { &s_87828ce1e317d017, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<31> b_bc1b3568ba424631 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49,  70,  66, 186, 104,  53,  27, 188,
     11,   0,   0,   0,   4,   0,   0,   0,
    153, 234, 220, 101,  80,  99,  79, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 116, 116, 112,  46,  99,  97, 112,
    110, 112,  58, 104, 116, 116, 112,  84,
    101, 115, 116,  68,  97, 116,  97,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      2,  32,  61,  28,  91,  61, 150, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,  18,   0,   0,   0,
      5,   0,   0,   0,  98,   0,   0,   0,
     47,   0,   0,   0,   0,   0,   0,   0,
     72, 101, 108, 108, 111,  32, 119, 111,
    114, 108, 100,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc1b3568ba424631 = b_bc1b3568ba424631.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_bc1b3568ba424631 = {
  0xbc1b3568ba424631, b_bc1b3568ba424631.words, 31, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_bc1b3568ba424631, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace fsc {

// HttpRoot
constexpr uint16_t HttpRoot::_capnpPrivate::dataWordSize;
constexpr uint16_t HttpRoot::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HttpRoot::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HttpRoot::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HttpRoot::Entry
constexpr uint16_t HttpRoot::Entry::_capnpPrivate::dataWordSize;
constexpr uint16_t HttpRoot::Entry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HttpRoot::Entry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HttpRoot::Entry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

const ::capnp::_::ConstStruct< ::fsc::HttpRoot> HTTP_TEST_DATA(::capnp::schemas::b_bc1b3568ba424631.words + 22);

}  // namespace

