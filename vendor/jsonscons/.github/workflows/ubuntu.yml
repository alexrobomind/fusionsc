name: Ubuntu

on: [push, pull_request]

permissions:
  contents: read

jobs:
  gcc_build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install gcc-10 g++-10
      shell: bash
    - name: cmake
      run: cmake -S . -B build -DJSONCONS_SANITIZE=ON -DCMAKE_BUILD_TYPE=Debug -DJSONCONS_BUILD_TESTS=On
      env:
        CC:   gcc-10
        CXX:  g++-10

    - working-directory: build/
      run: cmake --build . --config ubuntu-latest

    - working-directory: build/
      run: ctest -C ubuntu-latest --output-on-failure

  gcc_build12:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install gcc-11 g++-11
      shell: bash
    - name: cmake
      run: cmake -S . -B build -DJSONCONS_SANITIZE=ON -DCMAKE_BUILD_TYPE=Debug -DJSONCONS_BUILD_TESTS=On
      env:
        CC:   gcc-11
        CXX:  g++-11

    - working-directory: build/
      run: cmake --build . --config ubuntu-latest

    - working-directory: build/
      run: ctest -C ubuntu-latest --output-on-failure

  gcc_build_no_deprecated:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install gcc-10 g++-10
      shell: bash
    - name: cmake
      run: cmake -S . -B build -DCXXFLAGS="-DJSONCONS_NO_DEPRECATED" -DCMAKE_BUILD_TYPE=Debug -DJSONCONS_BUILD_TESTS=On
      env:
        CC:   gcc-10
        CXX:  g++-10

    - working-directory: build/
      run: cmake --build . --config ubuntu-latest

    - working-directory: build/
      run: ctest -C ubuntu-latest --output-on-failure

  gcc_build11b:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install g++-11
      shell: bash
    - name: cmake
      run: cmake -S . -B build -DJSONCONS_SANITIZE=ON -DLLVM_CXX_STD=c++17 -DCMAKE_BUILD_TYPE=Release -DJSONCONS_BUILD_TESTS=On
      env:
        CXX:  g++-11

    - working-directory: build/
      run: cmake --build . --config ubuntu-latest

    - working-directory: build/
      run: ctest -C ubuntu-latest --output-on-failure

  clang_13_build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install clang-13
      shell: bash
    - name: cmake
      run: cmake -S . -B build -DJSONCONS_SANITIZE=ON -DCMAKE_BUILD_TYPE=Debug -DJSONCONS_BUILD_TESTS=On 
      env:
        CC:   clang-13
        CXX:  clang++-13

    - working-directory: build/
      run: cmake --build . --config ubuntu-latest

    - working-directory: build/
      run: ctest -C ubuntu-latest --output-on-failure

  clang_14_build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install clang-14
      shell: bash
    - name: cmake
      run: cmake -S . -B build -DJSONCONS_SANITIZE=ON -DCMAKE_BUILD_TYPE=Debug -DJSONCONS_BUILD_TESTS=On 
      env:
        CC:   clang-14
        CXX:  clang++-14

    - working-directory: build/
      run: cmake --build . --config ubuntu-latest

    - working-directory: build/
      run: ctest -C ubuntu-latest --output-on-failure

#  clang_build_cxx20:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: install_gcc
#      run: |
#           sudo apt update
#           sudo apt install clang-14
#      shell: bash
#    - name: cmake
#      run: cmake -S . -B build -DJSONCONS_SANITIZE=ON -DCMAKE_BUILD_TYPE=Debug -DJSONCONS_BUILD_TESTS=On -DCMAKE_CXX_STANDARD=20 -DCMAKE_CXX_STANDARD_REQUIRED=ON 
#      env:
#        CC:   clang-14
#        CXX:  clang++-14
#
#    - working-directory: build/
#      run: cmake --build . --config ubuntu-latest
#
#    - working-directory: build/
#      run: ctest -C ubuntu-latest --output-on-failure

#  gcc_build_48:
#    name: GCC 4.8
#    runs-on: ubuntu-18.04
#
#    steps:
#    - uses: actions/checkout@v4
#      with:
#        fetch-depth: 0
#    - name: Install
#      run: |
#           sudo apt-get update -y -qq && sudo apt-get install -y -qq g++-4.8 binutils
#      shell: bash
#    - name: cmake
#      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DJSONCONS_BUILD_TESTS=On
#      env:
#        CC:   gcc-4.8
#        CXX:  g++-4.8
#    - name: build
#      run: cmake --build build --parallel 10
#    - name: test
#      run: cd build ; ctest -j 10 --output-on-failure


